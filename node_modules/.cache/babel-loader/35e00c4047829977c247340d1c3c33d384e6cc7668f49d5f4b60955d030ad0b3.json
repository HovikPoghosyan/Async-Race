{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\Async-Race\\\\src\\\\components\\\\commons\\\\ToggleButton\\\\ToggleButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport styles from './ToggleButton.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToggleButton({\n  name,\n  valueOne,\n  valueTwo,\n  startValue,\n  onToggle,\n  uncheckedValue = null\n}) {\n  _s();\n  const [selectedValue, setSelectedValue] = useState(null);\n  useEffect(() => {\n    setSelectedValue(startValue);\n  }, [startValue]);\n  const toggle = value => {\n    const newValue = selectedValue === value ? startValue : value;\n    setSelectedValue(newValue);\n    onToggle(selectedValue === value ? uncheckedValue : value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.toggle,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: name,\n      type: \"radio\",\n      id: valueOne,\n      className: styles.toggleInput,\n      onClick: () => toggle(valueOne),\n      checked: selectedValue === valueOne,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: valueOne,\n      className: classNames(styles.toggleBtn, styles.leftBtn),\n      children: valueOne\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: name,\n      type: \"radio\",\n      id: valueTwo,\n      className: styles.toggleInput,\n      onClick: () => toggle(valueTwo),\n      checked: selectedValue === valueTwo,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: valueTwo,\n      className: classNames(styles.toggleBtn, styles.rightBtn),\n      children: valueTwo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(ToggleButton, \"ng4UgPABP3PNVQXUXLZtZQe4NAA=\");\n_c = ToggleButton;\n;\nexport default ToggleButton;\nvar _c;\n$RefreshReg$(_c, \"ToggleButton\");","map":{"version":3,"names":["React","useEffect","useState","classNames","styles","jsxDEV","_jsxDEV","ToggleButton","name","valueOne","valueTwo","startValue","onToggle","uncheckedValue","_s","selectedValue","setSelectedValue","toggle","value","newValue","className","children","type","id","toggleInput","onClick","checked","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","toggleBtn","leftBtn","rightBtn","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/components/commons/ToggleButton/ToggleButton.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './ToggleButton.module.scss';\r\n\r\ninterface ToggleButtonProps {\r\n  name: string;\r\n  valueOne: string;\r\n  valueTwo: string;\r\n  startValue: string | null;\r\n  onToggle: (value: string | null) => void;\r\n  uncheckedValue?: string | null;\r\n}\r\n\r\nfunction ToggleButton({ name, valueOne, valueTwo, startValue, onToggle, uncheckedValue = null }: ToggleButtonProps){\r\n  const [selectedValue, setSelectedValue] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    setSelectedValue(startValue);\r\n  }, [startValue]);\r\n\r\n  const toggle = (value: string) => {\r\n    const newValue = selectedValue === value ? startValue : value;\r\n    setSelectedValue(newValue);\r\n    onToggle(selectedValue === value ? uncheckedValue : value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.toggle}>\r\n      <input\r\n        name={name}\r\n        type=\"radio\"\r\n        id={valueOne}\r\n        className={styles.toggleInput}\r\n        onClick={() => toggle(valueOne)}\r\n        checked={selectedValue === valueOne}\r\n        readOnly\r\n      />\r\n      <label htmlFor={valueOne} className={classNames(styles.toggleBtn, styles.leftBtn)}>{valueOne}</label>\r\n\r\n      <input\r\n        name={name}\r\n        type=\"radio\"\r\n        id={valueTwo}\r\n        className={styles.toggleInput}\r\n        onClick={() => toggle(valueTwo)}\r\n        checked={selectedValue === valueTwo}\r\n        readOnly\r\n      />\r\n      <label\r\n        htmlFor={valueTwo}\r\n        className={classNames(styles.toggleBtn, styles.rightBtn)}\r\n      >\r\n        {valueTwo}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToggleButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,YAAY;AAEnC,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWhD,SAASC,YAAYA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,cAAc,GAAG;AAAwB,CAAC,EAAC;EAAAC,EAAA;EACjH,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAgB,IAAI,CAAC;EAEvED,SAAS,CAAC,MAAM;IACde,gBAAgB,CAACL,UAAU,CAAC;EAC9B,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMM,MAAM,GAAIC,KAAa,IAAK;IAChC,MAAMC,QAAQ,GAAGJ,aAAa,KAAKG,KAAK,GAAGP,UAAU,GAAGO,KAAK;IAC7DF,gBAAgB,CAACG,QAAQ,CAAC;IAC1BP,QAAQ,CAACG,aAAa,KAAKG,KAAK,GAAGL,cAAc,GAAGK,KAAK,CAAC;EAC5D,CAAC;EAED,oBACEZ,OAAA;IAAKc,SAAS,EAAEhB,MAAM,CAACa,MAAO;IAAAI,QAAA,gBAC5Bf,OAAA;MACEE,IAAI,EAAEA,IAAK;MACXc,IAAI,EAAC,OAAO;MACZC,EAAE,EAAEd,QAAS;MACbW,SAAS,EAAEhB,MAAM,CAACoB,WAAY;MAC9BC,OAAO,EAAEA,CAAA,KAAMR,MAAM,CAACR,QAAQ,CAAE;MAChCiB,OAAO,EAAEX,aAAa,KAAKN,QAAS;MACpCkB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFzB,OAAA;MAAO0B,OAAO,EAAEvB,QAAS;MAACW,SAAS,EAAEjB,UAAU,CAACC,MAAM,CAAC6B,SAAS,EAAE7B,MAAM,CAAC8B,OAAO,CAAE;MAAAb,QAAA,EAAEZ;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAErGzB,OAAA;MACEE,IAAI,EAAEA,IAAK;MACXc,IAAI,EAAC,OAAO;MACZC,EAAE,EAAEb,QAAS;MACbU,SAAS,EAAEhB,MAAM,CAACoB,WAAY;MAC9BC,OAAO,EAAEA,CAAA,KAAMR,MAAM,CAACP,QAAQ,CAAE;MAChCgB,OAAO,EAAEX,aAAa,KAAKL,QAAS;MACpCiB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFzB,OAAA;MACE0B,OAAO,EAAEtB,QAAS;MAClBU,SAAS,EAAEjB,UAAU,CAACC,MAAM,CAAC6B,SAAS,EAAE7B,MAAM,CAAC+B,QAAQ,CAAE;MAAAd,QAAA,EAExDX;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACjB,EAAA,CA3CQP,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AA2CpB;AAED,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
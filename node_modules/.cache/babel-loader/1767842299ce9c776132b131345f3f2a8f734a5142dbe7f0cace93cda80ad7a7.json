{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchGarageList, fetchWinnersList, fetchNewCar, fetchDeleteCar, fetchUpdateCar } from 'CONSTANTS/Axios';\nconst addNewCar = createAsyncThunk('list/addNewCar', async (carData, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const data = await fetchNewCar(carData);\n  if (data.isFailed) return rejectWithValue();\n  dispatch(getGarageLists()).unwrap();\n  return data;\n});\nconst updateCar = createAsyncThunk('list/updateCar', async (carData, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const data = await fetchUpdateCar(carData);\n  if (data !== null && data !== void 0 && data.isFailed) return rejectWithValue();\n  dispatch(getGarageLists()).unwrap();\n  return null;\n});\nconst deleteCar = createAsyncThunk('list/deleteCar', async (id, {\n  rejectWithValue,\n  dispatch\n}) => {\n  console.log('deleting: ', id);\n  const data = await fetchDeleteCar(id);\n  if (data.isFailed) return rejectWithValue();\n  dispatch(getGarageLists()).unwrap();\n  return data;\n});\nconst getGarageLists = createAsyncThunk('list/getGarageLists', async (props, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const data = await fetchGarageList();\n  if (data.isFailed) return rejectWithValue();\n  dispatch(getWinnersLists()).unwrap();\n  return data;\n});\nconst getWinnersLists = createAsyncThunk('list/getWinnersLists', async (props, {\n  rejectWithValue\n}) => {\n  const data = await fetchWinnersList();\n  if (data.isFailed) return rejectWithValue();\n  return data;\n});\nconst initialState = {\n  garageList: [],\n  winnersList: [],\n  selectedCar: undefined,\n  loading: false\n};\nconst appSlice = createSlice({\n  name: 'list',\n  initialState,\n  reducers: {\n    setSelectedCar(state, {\n      payload\n    }) {\n      state.selectedCar = payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(deleteCar.pending, (state, {\n      meta\n    }) => {\n      console.log('deleting id: ', meta);\n      if (meta.arg == state.selectedCar.id) {\n        state.selectedCar = undefined;\n      }\n      state.loading = true;\n    }).addCase(addNewCar.pending, state => {\n      state.loading = true;\n    }).addCase(updateCar.pending, state => {\n      state.loading = true;\n    }).addCase(getGarageLists.pending, state => {\n      state.loading = true;\n    }).addCase(getGarageLists.fulfilled, (state, {\n      payload\n    }) => {\n      state.garageList = payload;\n    }).addCase(getWinnersLists.pending, state => {\n      state.loading = true;\n    }).addCase(getWinnersLists.fulfilled, (state, {\n      payload\n    }) => {\n      state.winnersList = payload.map(winner => {\n        var _car$name, _car$color;\n        const car = state.garageList.find(current => current.id === winner.id);\n        if (car !== null && car !== void 0 && car.name && car !== null && car !== void 0 && car.color) return {\n          ...winner,\n          name: (_car$name = car === null || car === void 0 ? void 0 : car.name) !== null && _car$name !== void 0 ? _car$name : 'Unknown',\n          color: (_car$color = car === null || car === void 0 ? void 0 : car.color) !== null && _car$color !== void 0 ? _car$color : '#000'\n        };\n      });\n      state.loading = false;\n    }).addCase(getWinnersLists.rejected, state => {\n      state.loading = false;\n    });\n  }\n});\nexport const {\n  setSelectedCar\n} = appSlice.actions;\nexport { getGarageLists, getWinnersLists, addNewCar, updateCar, deleteCar };\nexport default appSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchGarageList","fetchWinnersList","fetchNewCar","fetchDeleteCar","fetchUpdateCar","addNewCar","carData","rejectWithValue","dispatch","data","isFailed","getGarageLists","unwrap","updateCar","deleteCar","id","console","log","props","getWinnersLists","initialState","garageList","winnersList","selectedCar","undefined","loading","appSlice","name","reducers","setSelectedCar","state","payload","extraReducers","builder","addCase","pending","meta","arg","fulfilled","map","winner","_car$name","_car$color","car","find","current","color","rejected","actions","reducer"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/store/modules/listReducer.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { fetchGarageList, fetchWinnersList, fetchNewCar, fetchDeleteCar, fetchUpdateCar } from 'CONSTANTS/Axios';\n\nconst addNewCar = createAsyncThunk(\n   'list/addNewCar',\n   async ( carData, { rejectWithValue, dispatch }) => {\n      const data = await fetchNewCar( carData );\n      if ( data.isFailed ) return rejectWithValue();\n      \n      dispatch( getGarageLists() ).unwrap();\n\n      return data;\n   }\n);\n\nconst updateCar = createAsyncThunk(\n   'list/updateCar',\n   async ( carData, { rejectWithValue, dispatch }) => {\n      const data = await fetchUpdateCar( carData );\n      if ( data?.isFailed ) return rejectWithValue();\n\n      dispatch( getGarageLists() ).unwrap();\n\n      return null;\n   }\n);\n\nconst deleteCar = createAsyncThunk(\n   'list/deleteCar',\n   async ( id, { rejectWithValue, dispatch }) => {\n      console.log('deleting: ', id )\n      const data = await fetchDeleteCar( id );\n      if ( data.isFailed ) return rejectWithValue();\n      \n      dispatch( getGarageLists() ).unwrap();\n\n      return data;\n   }\n);\n\nconst getGarageLists = createAsyncThunk(\n   'list/getGarageLists',\n   async ( props, { rejectWithValue, dispatch }) => {\n      const data = await fetchGarageList();\n      if ( data.isFailed ) return rejectWithValue();\n         \n      dispatch( getWinnersLists() ).unwrap();\n\n      return data;\n   }\n);\n\nconst getWinnersLists = createAsyncThunk(\n   'list/getWinnersLists',\n   async ( props, { rejectWithValue }) => {\n      const data = await fetchWinnersList();\n      if ( data.isFailed ) return rejectWithValue();\n\n      return data;\n   }\n);\n\n\nconst initialState = {\n   garageList: [],\n   winnersList: [],\n   selectedCar: undefined,\n   loading: false,\n};\n\nconst appSlice = createSlice({\n   name: 'list',\n   initialState,\n   reducers: {\n      setSelectedCar( state, { payload } ) {\n         state.selectedCar = payload;\n      },\n   },\n   extraReducers: ( builder ) => {\n      builder\n      .addCase( deleteCar.pending, ( state, { meta } ) => {\n         console.log('deleting id: ', meta)\n         if ( meta.arg == state.selectedCar.id ) {\n            state.selectedCar = undefined;\n         }\n         state.loading = true;\n      })\n      .addCase( addNewCar.pending, ( state ) => {\n         state.loading = true;\n      })\n      .addCase( updateCar.pending, ( state ) => {\n         state.loading = true;\n      })\n      .addCase( getGarageLists.pending, ( state ) => {\n         state.loading = true;\n      })\n      .addCase( getGarageLists.fulfilled, ( state, { payload } ) => {\n         state.garageList = payload;\n      })\n      .addCase( getWinnersLists.pending, ( state ) => {\n         state.loading = true;\n      })\n      .addCase( getWinnersLists.fulfilled, ( state, { payload } ) => {\n         state.winnersList = payload.map( winner => {\n            const car = state.garageList.find( current => current.id === winner.id );\n            if ( car?.name && car?.color ) return {\n               ...winner,\n               name: car?.name ?? 'Unknown',\n               color: car?.color ?? '#000',\n            };\n         }) ;\n         state.loading = false;\n      })\n      .addCase( getWinnersLists.rejected, ( state ) => {\n         state.loading = false;\n      })\n   }\n});\n\nexport const { \n   setSelectedCar,\n} = appSlice.actions;\nexport { \n   getGarageLists,\n   getWinnersLists,\n   addNewCar,\n   updateCar,\n   deleteCar,\n};\nexport default appSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\Async-Race\\\\src\\\\components\\\\commons\\\\WinnerTableHead\\\\WinnerTableHead.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from 'store/hooks/hooks';\nimport { setWinnersList } from 'store/modules/listReducer';\nimport sortWinnersList from './SortWinnersList';\nimport ToggleButton from '../ToggleButton/ToggleButton';\nimport styles from './WinnerTableHead.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WinnerTableHead() {\n  _s();\n  const dispatch = useAppDispatch();\n  const winnersList = useAppSelector(store => store.list.winnersList);\n  const [sortBy, setSortBy] = useState('By Time');\n  const [sortDirection, setSortDirection] = useState('Increasing');\n  useEffect(() => {\n    if (sortBy && sortDirection) dispatch(setWinnersList(sortWinnersList(winnersList, sortBy, sortDirection)));\n  }, [sortBy, sortDirection, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.winnerTableHead,\n    children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n      name: \"sortBy\",\n      valueOne: \"By Wins\",\n      valueTwo: \"By Time\",\n      startValue: \"By Time\",\n      onToggle: newValue => {\n        if (newValue !== null) {\n          setSortBy(newValue);\n        }\n      },\n      uncheckedValue: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      name: \"sortDirection\",\n      valueOne: \"Increasing\",\n      valueTwo: \"Decreasing\",\n      startValue: \"Increasing\",\n      onToggle: newValue => {\n        if (newValue !== null) {\n          setSortDirection(newValue);\n        }\n      },\n      uncheckedValue: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n}\n_s(WinnerTableHead, \"U2Nnwa1h/WnDY8AlvB7frioAOGI=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = WinnerTableHead;\nexport default WinnerTableHead;\nvar _c;\n$RefreshReg$(_c, \"WinnerTableHead\");","map":{"version":3,"names":["React","useEffect","useState","useAppDispatch","useAppSelector","setWinnersList","sortWinnersList","ToggleButton","styles","jsxDEV","_jsxDEV","WinnerTableHead","_s","dispatch","winnersList","store","list","sortBy","setSortBy","sortDirection","setSortDirection","className","winnerTableHead","children","name","valueOne","valueTwo","startValue","onToggle","newValue","uncheckedValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/components/commons/WinnerTableHead/WinnerTableHead.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from 'store/hooks/hooks';\nimport { setWinnersList } from 'store/modules/listReducer';\nimport sortWinnersList, { SortBy, SortDirection } from './SortWinnersList';\nimport ToggleButton from '../ToggleButton/ToggleButton';\n\nimport styles from './WinnerTableHead.module.scss';\n\nfunction WinnerTableHead() {\n   const dispatch = useAppDispatch();\n   const winnersList = useAppSelector((store) => store.list.winnersList);\n   const [sortBy, setSortBy] = useState<SortBy>('By Time');\n   const [sortDirection, setSortDirection] = useState<SortDirection>('Increasing');\n   useEffect(() => {\n      if (sortBy && sortDirection) dispatch(setWinnersList(sortWinnersList(winnersList, sortBy, sortDirection)));\n   }, [sortBy, sortDirection, dispatch]);\n\n   return (\n      <div className={styles.winnerTableHead}>\n         <ToggleButton\n            name=\"sortBy\"\n            valueOne=\"By Wins\"\n            valueTwo=\"By Time\"\n            startValue=\"By Time\"\n            onToggle={(newValue: string | null) => {\n               if (newValue !== null) {\n                  setSortBy(newValue as SortBy);\n               }\n            }}\n            uncheckedValue={null}\n         />\n         <ToggleButton\n            name=\"sortDirection\"\n            valueOne=\"Increasing\"\n            valueTwo=\"Decreasing\"\n            startValue=\"Increasing\"\n            onToggle={(newValue: string | null) => {\n               if (newValue !== null) {\n                  setSortDirection(newValue as SortDirection);\n               }\n            }}\n            uncheckedValue={null}\n         />\n      </div>\n   );\n}\n\nexport default WinnerTableHead;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,EAAEC,cAAc,QAAQ,mBAAmB;AAClE,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,OAAOC,eAAe,MAAiC,mBAAmB;AAC1E,OAAOC,YAAY,MAAM,8BAA8B;AAEvD,OAAOC,MAAM,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGV,cAAc,CAAC,CAAC;EACjC,MAAMW,WAAW,GAAGV,cAAc,CAAEW,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,WAAW,CAAC;EACrE,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAS,SAAS,CAAC;EACvD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAgB,YAAY,CAAC;EAC/ED,SAAS,CAAC,MAAM;IACb,IAAIgB,MAAM,IAAIE,aAAa,EAAEN,QAAQ,CAACR,cAAc,CAACC,eAAe,CAACQ,WAAW,EAAEG,MAAM,EAAEE,aAAa,CAAC,CAAC,CAAC;EAC7G,CAAC,EAAE,CAACF,MAAM,EAAEE,aAAa,EAAEN,QAAQ,CAAC,CAAC;EAErC,oBACGH,OAAA;IAAKW,SAAS,EAAEb,MAAM,CAACc,eAAgB;IAAAC,QAAA,gBACpCb,OAAA,CAACH,YAAY;MACViB,IAAI,EAAC,QAAQ;MACbC,QAAQ,EAAC,SAAS;MAClBC,QAAQ,EAAC,SAAS;MAClBC,UAAU,EAAC,SAAS;MACpBC,QAAQ,EAAGC,QAAuB,IAAK;QACpC,IAAIA,QAAQ,KAAK,IAAI,EAAE;UACpBX,SAAS,CAACW,QAAkB,CAAC;QAChC;MACH,CAAE;MACFC,cAAc,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACFxB,OAAA,CAACH,YAAY;MACViB,IAAI,EAAC,eAAe;MACpBC,QAAQ,EAAC,YAAY;MACrBC,QAAQ,EAAC,YAAY;MACrBC,UAAU,EAAC,YAAY;MACvBC,QAAQ,EAAGC,QAAuB,IAAK;QACpC,IAAIA,QAAQ,KAAK,IAAI,EAAE;UACpBT,gBAAgB,CAACS,QAAyB,CAAC;QAC9C;MACH,CAAE;MACFC,cAAc,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEZ;AAACtB,EAAA,CArCQD,eAAe;EAAA,QACJR,cAAc,EACXC,cAAc;AAAA;AAAA+B,EAAA,GAF5BxB,eAAe;AAuCxB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
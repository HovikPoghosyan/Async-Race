{"ast":null,"code":"import _objectSpread from\"C:/Users/Admin/Documents/GitHub/Async-Race/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{addNewCar,updateCar,setSelectedCar}from'store/modules/listReducer';function UseControlPanelForm(){const dispatch=useDispatch();const selectedCar=useSelector(store=>store.list.selectedCar);const[newCar,setNewCar]=useState({name:'',color:'#48bfee'});const[updatedCar,setUpdatedCar]=useState({name:'',color:'#48bfee'});const[updateBtnDisable,setUpdateBtnDisable]=useState(true);useEffect(()=>{if(selectedCar)setUpdatedCar({name:selectedCar.name,color:selectedCar.color});else setUpdatedCar({name:'',color:'#48bfee'});},[selectedCar]);const submitNewCar=()=>{dispatch(addNewCar(newCar));setNewCar({name:'',color:'#48bfee'});};const submitUpdatedCar=()=>{dispatch(updateCar(_objectSpread(_objectSpread({},selectedCar),updatedCar)));setUpdatedCar({name:'',color:'#48bfee'});dispatch(setSelectedCar(undefined));};const handleNewCar=newData=>setNewCar(_objectSpread(_objectSpread({},newCar),newData));const handleUpdatedCar=newData=>setUpdatedCar(_objectSpread(_objectSpread({},updatedCar),newData));useEffect(()=>{if(selectedCar&&(updatedCar.name!==selectedCar.name||updatedCar.color!==selectedCar.color)){setUpdateBtnDisable(false);}else setUpdateBtnDisable(true);},[updatedCar]);return{newCar,updatedCar,handleNewCar,handleUpdatedCar,submitNewCar,submitUpdatedCar,updateBtnDisable};}export default UseControlPanelForm;","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","addNewCar","updateCar","setSelectedCar","UseControlPanelForm","dispatch","selectedCar","store","list","newCar","setNewCar","name","color","updatedCar","setUpdatedCar","updateBtnDisable","setUpdateBtnDisable","submitNewCar","submitUpdatedCar","_objectSpread","undefined","handleNewCar","newData","handleUpdatedCar"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/components/commons/ControlPanelForm/UseControlPanelForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n   addNewCar,\r\n   updateCar,\r\n   setSelectedCar,\r\n} from 'store/modules/listReducer';\r\n\r\nfunction UseControlPanelForm() {\r\n   const dispatch = useDispatch();\r\n   const selectedCar = useSelector((store) => store.list.selectedCar);\r\n   const [newCar, setNewCar] = useState({ name: '', color: '#48bfee' });\r\n   const [updatedCar, setUpdatedCar] = useState({ name: '', color: '#48bfee' });\r\n   const [updateBtnDisable, setUpdateBtnDisable] = useState(true);\r\n\r\n   useEffect(() => {\r\n      if (selectedCar)\r\n         setUpdatedCar({ name: selectedCar.name, color: selectedCar.color });\r\n      else setUpdatedCar({ name: '', color: '#48bfee' });\r\n   }, [selectedCar]);\r\n\r\n   const submitNewCar = () => {\r\n      dispatch(addNewCar(newCar));\r\n      setNewCar({ name: '', color: '#48bfee' });\r\n   };\r\n   const submitUpdatedCar = () => {\r\n      dispatch(updateCar({ ...selectedCar, ...updatedCar }));\r\n      setUpdatedCar({ name: '', color: '#48bfee' });\r\n      dispatch(setSelectedCar(undefined));\r\n   };\r\n\r\n   const handleNewCar = (newData) => setNewCar({ ...newCar, ...newData });\r\n   const handleUpdatedCar = (newData) =>\r\n      setUpdatedCar({ ...updatedCar, ...newData });\r\n\r\n   useEffect(() => {\r\n      if (\r\n         selectedCar &&\r\n         (updatedCar.name !== selectedCar.name ||\r\n            updatedCar.color !== selectedCar.color)\r\n      ) {\r\n         setUpdateBtnDisable(false);\r\n      } else setUpdateBtnDisable(true);\r\n   }, [updatedCar]);\r\n\r\n   return {\r\n      newCar,\r\n      updatedCar,\r\n      handleNewCar,\r\n      handleUpdatedCar,\r\n      submitNewCar,\r\n      submitUpdatedCar,\r\n      updateBtnDisable,\r\n   };\r\n}\r\n\r\nexport default UseControlPanelForm;\r\n"],"mappings":"+HAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAEtD,OACGC,SAAS,CACTC,SAAS,CACTC,cAAc,KACV,2BAA2B,CAElC,QAAS,CAAAC,mBAAmBA,CAAA,CAAG,CAC5B,KAAM,CAAAC,QAAQ,CAAGN,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAO,WAAW,CAAGN,WAAW,CAAEO,KAAK,EAAKA,KAAK,CAACC,IAAI,CAACF,WAAW,CAAC,CAClE,KAAM,CAACG,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,CAAEa,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,SAAU,CAAC,CAAC,CACpE,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGhB,QAAQ,CAAC,CAAEa,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,SAAU,CAAC,CAAC,CAC5E,KAAM,CAACG,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAE9DD,SAAS,CAAC,IAAM,CACb,GAAIS,WAAW,CACZQ,aAAa,CAAC,CAAEH,IAAI,CAAEL,WAAW,CAACK,IAAI,CAAEC,KAAK,CAAEN,WAAW,CAACM,KAAM,CAAC,CAAC,CAAC,IAClE,CAAAE,aAAa,CAAC,CAAEH,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,SAAU,CAAC,CAAC,CACrD,CAAC,CAAE,CAACN,WAAW,CAAC,CAAC,CAEjB,KAAM,CAAAW,YAAY,CAAGA,CAAA,GAAM,CACxBZ,QAAQ,CAACJ,SAAS,CAACQ,MAAM,CAAC,CAAC,CAC3BC,SAAS,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,SAAU,CAAC,CAAC,CAC5C,CAAC,CACD,KAAM,CAAAM,gBAAgB,CAAGA,CAAA,GAAM,CAC5Bb,QAAQ,CAACH,SAAS,CAAAiB,aAAA,CAAAA,aAAA,IAAMb,WAAW,EAAKO,UAAU,CAAE,CAAC,CAAC,CACtDC,aAAa,CAAC,CAAEH,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,SAAU,CAAC,CAAC,CAC7CP,QAAQ,CAACF,cAAc,CAACiB,SAAS,CAAC,CAAC,CACtC,CAAC,CAED,KAAM,CAAAC,YAAY,CAAIC,OAAO,EAAKZ,SAAS,CAAAS,aAAA,CAAAA,aAAA,IAAMV,MAAM,EAAKa,OAAO,CAAE,CAAC,CACtE,KAAM,CAAAC,gBAAgB,CAAID,OAAO,EAC9BR,aAAa,CAAAK,aAAA,CAAAA,aAAA,IAAMN,UAAU,EAAKS,OAAO,CAAE,CAAC,CAE/CzB,SAAS,CAAC,IAAM,CACb,GACGS,WAAW,GACVO,UAAU,CAACF,IAAI,GAAKL,WAAW,CAACK,IAAI,EAClCE,UAAU,CAACD,KAAK,GAAKN,WAAW,CAACM,KAAK,CAAC,CAC3C,CACCI,mBAAmB,CAAC,KAAK,CAAC,CAC7B,CAAC,IAAM,CAAAA,mBAAmB,CAAC,IAAI,CAAC,CACnC,CAAC,CAAE,CAACH,UAAU,CAAC,CAAC,CAEhB,MAAO,CACJJ,MAAM,CACNI,UAAU,CACVQ,YAAY,CACZE,gBAAgB,CAChBN,YAAY,CACZC,gBAAgB,CAChBH,gBACH,CAAC,CACJ,CAEA,cAAe,CAAAX,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
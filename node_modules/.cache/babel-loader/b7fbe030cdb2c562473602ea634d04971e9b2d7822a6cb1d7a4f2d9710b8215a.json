{"ast":null,"code":"import React,{useEffect,useState}from'react';import classNames from'classnames';import styles from'./ToggleButton.module.scss';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ToggleButton(_ref){let{name,valueOne,valueTwo,startValue,onToggle,uncheckedValue=null}=_ref;const[selectedValue,setSelectedValue]=useState(null);useEffect(()=>{setSelectedValue(startValue);},[startValue]);const toggle=value=>{const newValue=selectedValue===value?startValue:value;setSelectedValue(newValue);onToggle(selectedValue===value?uncheckedValue:value);};return/*#__PURE__*/_jsxs(\"div\",{className:styles.toggle,children:[/*#__PURE__*/_jsx(\"input\",{name:name,type:\"radio\",id:valueOne,className:styles.toggleInput,onClick:()=>toggle(valueOne),checked:selectedValue===valueOne,readOnly:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:valueOne,className:classNames(styles.toggleBtn,styles.leftBtn),children:valueOne}),/*#__PURE__*/_jsx(\"input\",{name:name,type:\"radio\",id:valueTwo,className:styles.toggleInput,onClick:()=>toggle(valueTwo),checked:selectedValue===valueTwo,readOnly:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:valueTwo,className:classNames(styles.toggleBtn,styles.rightBtn),children:valueTwo})]});}export default ToggleButton;","map":{"version":3,"names":["React","useEffect","useState","classNames","styles","jsx","_jsx","jsxs","_jsxs","ToggleButton","_ref","name","valueOne","valueTwo","startValue","onToggle","uncheckedValue","selectedValue","setSelectedValue","toggle","value","newValue","className","children","type","id","toggleInput","onClick","checked","readOnly","htmlFor","toggleBtn","leftBtn","rightBtn"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/components/commons/ToggleButton/ToggleButton.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './ToggleButton.module.scss';\r\n\r\ninterface ToggleButtonProps {\r\n   name: string;\r\n   valueOne: string;\r\n   valueTwo: string;\r\n   startValue: string | null;\r\n   onToggle: (value: string | null) => void;\r\n   uncheckedValue?: string | null;\r\n}\r\n\r\nfunction ToggleButton({ name, valueOne, valueTwo, startValue, onToggle, uncheckedValue = null }: ToggleButtonProps) {\r\n   const [selectedValue, setSelectedValue] = useState<string | null>(null);\r\n   useEffect(() => {\r\n      setSelectedValue(startValue);\r\n   }, [startValue]);\r\n   const toggle = (value: string) => {\r\n      const newValue = selectedValue === value ? startValue : value;\r\n      setSelectedValue(newValue);\r\n      onToggle(selectedValue === value ? uncheckedValue : value);\r\n   };\r\n   return (\r\n      <div className={styles.toggle}>\r\n         <input\r\n            name={name}\r\n            type=\"radio\"\r\n            id={valueOne}\r\n            className={styles.toggleInput}\r\n            onClick={() => toggle(valueOne)}\r\n            checked={selectedValue === valueOne}\r\n            readOnly\r\n         />\r\n         <label htmlFor={valueOne} className={classNames(styles.toggleBtn, styles.leftBtn)}>\r\n            {valueOne}\r\n         </label>\r\n\r\n         <input\r\n            name={name}\r\n            type=\"radio\"\r\n            id={valueTwo}\r\n            className={styles.toggleInput}\r\n            onClick={() => toggle(valueTwo)}\r\n            checked={selectedValue === valueTwo}\r\n            readOnly\r\n         />\r\n         <label htmlFor={valueTwo} className={classNames(styles.toggleBtn, styles.rightBtn)}>\r\n            {valueTwo}\r\n         </label>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ToggleButton;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,UAAU,KAAM,YAAY,CAEnC,MAAO,CAAAC,MAAM,KAAM,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAWhD,QAAS,CAAAC,YAAYA,CAAAC,IAAA,CAA+F,IAA9F,CAAEC,IAAI,CAAEC,QAAQ,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,cAAc,CAAG,IAAwB,CAAC,CAAAN,IAAA,CAC/G,KAAM,CAACO,aAAa,CAAEC,gBAAgB,CAAC,CAAGhB,QAAQ,CAAgB,IAAI,CAAC,CACvED,SAAS,CAAC,IAAM,CACbiB,gBAAgB,CAACJ,UAAU,CAAC,CAC/B,CAAC,CAAE,CAACA,UAAU,CAAC,CAAC,CAChB,KAAM,CAAAK,MAAM,CAAIC,KAAa,EAAK,CAC/B,KAAM,CAAAC,QAAQ,CAAGJ,aAAa,GAAKG,KAAK,CAAGN,UAAU,CAAGM,KAAK,CAC7DF,gBAAgB,CAACG,QAAQ,CAAC,CAC1BN,QAAQ,CAACE,aAAa,GAAKG,KAAK,CAAGJ,cAAc,CAAGI,KAAK,CAAC,CAC7D,CAAC,CACD,mBACGZ,KAAA,QAAKc,SAAS,CAAElB,MAAM,CAACe,MAAO,CAAAI,QAAA,eAC3BjB,IAAA,UACGK,IAAI,CAAEA,IAAK,CACXa,IAAI,CAAC,OAAO,CACZC,EAAE,CAAEb,QAAS,CACbU,SAAS,CAAElB,MAAM,CAACsB,WAAY,CAC9BC,OAAO,CAAEA,CAAA,GAAMR,MAAM,CAACP,QAAQ,CAAE,CAChCgB,OAAO,CAAEX,aAAa,GAAKL,QAAS,CACpCiB,QAAQ,MACV,CAAC,cACFvB,IAAA,UAAOwB,OAAO,CAAElB,QAAS,CAACU,SAAS,CAAEnB,UAAU,CAACC,MAAM,CAAC2B,SAAS,CAAE3B,MAAM,CAAC4B,OAAO,CAAE,CAAAT,QAAA,CAC9EX,QAAQ,CACL,CAAC,cAERN,IAAA,UACGK,IAAI,CAAEA,IAAK,CACXa,IAAI,CAAC,OAAO,CACZC,EAAE,CAAEZ,QAAS,CACbS,SAAS,CAAElB,MAAM,CAACsB,WAAY,CAC9BC,OAAO,CAAEA,CAAA,GAAMR,MAAM,CAACN,QAAQ,CAAE,CAChCe,OAAO,CAAEX,aAAa,GAAKJ,QAAS,CACpCgB,QAAQ,MACV,CAAC,cACFvB,IAAA,UAAOwB,OAAO,CAAEjB,QAAS,CAACS,SAAS,CAAEnB,UAAU,CAACC,MAAM,CAAC2B,SAAS,CAAE3B,MAAM,CAAC6B,QAAQ,CAAE,CAAAV,QAAA,CAC/EV,QAAQ,CACL,CAAC,EACN,CAAC,CAEZ,CAEA,cAAe,CAAAJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
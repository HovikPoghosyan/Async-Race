{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCarDrive } from 'CONSTANTS/Axios';\nimport { deleteCar, setSelectedCar } from 'store/modules/listReducer';\nimport styles from './GarageTableRow.module.scss';\nfunction UseGarageTableRow(caarData) {\n  _s();\n  const dispatch = useDispatch();\n  const selectedCar = useSelector(store => store.list.selectedCar);\n  const [speed, setSpeed] = useState(0);\n  const [raceStatus, setRaceStatus] = useState('stopped');\n  const animationStyle = {\n    animation: `${styles.moveToEnd} ${speed}s linear 4.2s forwards`\n  };\n  const handleStart = () => {\n    setRaceStatus('started');\n    fetchCarDrive(carData.id, 'started').then(response => {\n      if (response !== null && response !== void 0 && response.isFailed) setRaceStatus('stopped');else {\n        const speedValue = response.distance / (response.velocity * 1500);\n        setSpeed(speedValue);\n        setTimeout(() => setRaceStatus('finished'), (speedValue + 4.2) * 1000);\n      }\n    });\n  };\n  const handleStop = () => {\n    fetchCarDrive(id, 'stopped');\n    setRaceStatus('stopped');\n  };\n  const toggleSelect = () => dispatch(setSelectedCar((selectedCar === null || selectedCar === void 0 ? void 0 : selectedCar.id) == id ? undefined : carData));\n  const handleDelete = () => dispatch(deleteCar(id));\n  return {\n    handleStart,\n    handleStop,\n    toggleSelect,\n    handleDelete,\n    raceStatus,\n    animationStyle\n  };\n}\n_s(UseGarageTableRow, \"FLErLoy0K5T2LfNHg4pVNtmdIWs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = UseGarageTableRow;\nexport default UseGarageTableRow;\nvar _c;\n$RefreshReg$(_c, \"UseGarageTableRow\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","fetchCarDrive","deleteCar","setSelectedCar","styles","UseGarageTableRow","caarData","_s","dispatch","selectedCar","store","list","speed","setSpeed","raceStatus","setRaceStatus","animationStyle","animation","moveToEnd","handleStart","carData","id","then","response","isFailed","speedValue","distance","velocity","setTimeout","handleStop","toggleSelect","undefined","handleDelete","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/components/commons/GarageTableRow/UseGarageTableRow.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { fetchCarDrive } from 'CONSTANTS/Axios';\r\nimport { deleteCar, setSelectedCar } from 'store/modules/listReducer';\r\n\r\nimport styles from './GarageTableRow.module.scss';\r\n\r\nfunction UseGarageTableRow( caarData ) {\r\n   const dispatch = useDispatch();\r\n   const selectedCar = useSelector( store => store.list.selectedCar );\r\n   const [ speed, setSpeed ] = useState( 0 );\r\n   const [ raceStatus, setRaceStatus ] = useState( 'stopped' );\r\n   const animationStyle = { animation: `${ styles.moveToEnd } ${ speed }s linear 4.2s forwards` };\r\n\r\n   const handleStart = () => {\r\n      setRaceStatus( 'started' );\r\n      fetchCarDrive( carData.id, 'started' )\r\n      .then( response => {\r\n         if ( response?.isFailed ) setRaceStatus( 'stopped' );\r\n         else {\r\n            const speedValue = response.distance / ( response.velocity * 1500 );\r\n            setSpeed( speedValue );\r\n            setTimeout( () => setRaceStatus( 'finished' ), ( speedValue + 4.2 ) * 1000 );\r\n         }\r\n      });\r\n   };\r\n\r\n   const handleStop = () => {\r\n      fetchCarDrive( id, 'stopped' );\r\n      setRaceStatus( 'stopped' );\r\n   };\r\n\r\n   const toggleSelect = () => dispatch( setSelectedCar( selectedCar?.id == id ? undefined : carData ) );\r\n\r\n   const handleDelete = () => dispatch( deleteCar( id ) );\r\n   \r\n   return {\r\n      handleStart,\r\n      handleStop,\r\n      toggleSelect,\r\n      handleDelete,\r\n      raceStatus,\r\n      animationStyle,\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\nexport default UseGarageTableRow;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,SAAS,EAAEC,cAAc,QAAQ,2BAA2B;AAErE,OAAOC,MAAM,MAAM,8BAA8B;AAEjD,SAASC,iBAAiBA,CAAEC,QAAQ,EAAG;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,WAAW,GAAGT,WAAW,CAAEU,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACF,WAAY,CAAC;EAClE,MAAM,CAAEG,KAAK,EAAEC,QAAQ,CAAE,GAAGf,QAAQ,CAAE,CAAE,CAAC;EACzC,MAAM,CAAEgB,UAAU,EAAEC,aAAa,CAAE,GAAGjB,QAAQ,CAAE,SAAU,CAAC;EAC3D,MAAMkB,cAAc,GAAG;IAAEC,SAAS,EAAE,GAAIb,MAAM,CAACc,SAAS,IAAMN,KAAK;EAA0B,CAAC;EAE9F,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACvBJ,aAAa,CAAE,SAAU,CAAC;IAC1Bd,aAAa,CAAEmB,OAAO,CAACC,EAAE,EAAE,SAAU,CAAC,CACrCC,IAAI,CAAEC,QAAQ,IAAI;MAChB,IAAKA,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEC,QAAQ,EAAGT,aAAa,CAAE,SAAU,CAAC,CAAC,KAChD;QACF,MAAMU,UAAU,GAAGF,QAAQ,CAACG,QAAQ,IAAKH,QAAQ,CAACI,QAAQ,GAAG,IAAI,CAAE;QACnEd,QAAQ,CAAEY,UAAW,CAAC;QACtBG,UAAU,CAAE,MAAMb,aAAa,CAAE,UAAW,CAAC,EAAE,CAAEU,UAAU,GAAG,GAAG,IAAK,IAAK,CAAC;MAC/E;IACH,CAAC,CAAC;EACL,CAAC;EAED,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACtB5B,aAAa,CAAEoB,EAAE,EAAE,SAAU,CAAC;IAC9BN,aAAa,CAAE,SAAU,CAAC;EAC7B,CAAC;EAED,MAAMe,YAAY,GAAGA,CAAA,KAAMtB,QAAQ,CAAEL,cAAc,CAAE,CAAAM,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEY,EAAE,KAAIA,EAAE,GAAGU,SAAS,GAAGX,OAAQ,CAAE,CAAC;EAEpG,MAAMY,YAAY,GAAGA,CAAA,KAAMxB,QAAQ,CAAEN,SAAS,CAAEmB,EAAG,CAAE,CAAC;EAEtD,OAAO;IACJF,WAAW;IACXU,UAAU;IACVC,YAAY;IACZE,YAAY;IACZlB,UAAU;IACVE;EACH,CAAC;AACJ;AAACT,EAAA,CArCQF,iBAAiB;EAAA,QACNN,WAAW,EACRC,WAAW;AAAA;AAAAiC,EAAA,GAFzB5B,iBAAiB;AA0C1B,eAAeA,iBAAiB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
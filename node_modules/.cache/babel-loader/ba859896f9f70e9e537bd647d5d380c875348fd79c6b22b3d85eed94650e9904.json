{"ast":null,"code":"import _objectSpread from\"C:/Users/Admin/Documents/GitHub/Async-Race/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{addNewCar,updateCar}from'store/modules/listReducer';import{setSelectedCar}from'store/modules/listReducer';function UseControlPanelForm(){const dispatch=useDispatch();const selectedCar=useSelector(store=>store.list.selectedCar);const[newCar,setNewCar]=useState({name:'',color:'#48bfee'});const[updatedCar,setUpdatedCar]=useState({name:'',color:'#48bfee'});const[updateBtnDisable,setUpdateBtnDisable]=useState(true);useEffect(()=>{if(!!selectedCar)setUpdatedCar({name:selectedCar.name,color:selectedCar.color});else setUpdatedCar({name:'',color:'#48bfee'});},[selectedCar]);const submitNewCar=()=>{dispatch(addNewCar(newCar));setNewCar({name:'',color:'#48bfee'});};const submitUpdatedCar=()=>{dispatch(updateCar(_objectSpread(_objectSpread({},selectedCar),updatedCar)));setUpdatedCar({name:'',color:'#48bfee'});dispatch(setSelectedCar(undefined));};const handleNewCar=newData=>setNewCar(_objectSpread(_objectSpread({},newCar),newData));const handleUpdatedCar=newData=>setUpdatedCar(_objectSpread(_objectSpread({},updatedCar),newData));useEffect(()=>{if(selectedCar&&(updatedCar.name!==selectedCar.name||updatedCar.color!==selectedCar.color)){setUpdateBtnDisable(false);}else setUpdateBtnDisable(true);},[updatedCar]);return{newCar,updatedCar,handleNewCar,handleUpdatedCar,submitNewCar,submitUpdatedCar,updateBtnDisable};}export default UseControlPanelForm;","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","addNewCar","updateCar","setSelectedCar","UseControlPanelForm","dispatch","selectedCar","store","list","newCar","setNewCar","name","color","updatedCar","setUpdatedCar","updateBtnDisable","setUpdateBtnDisable","submitNewCar","submitUpdatedCar","_objectSpread","undefined","handleNewCar","newData","handleUpdatedCar"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/components/commons/ControlPanelForm/UseControlPanelForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { addNewCar, updateCar } from 'store/modules/listReducer';\r\nimport { setSelectedCar } from 'store/modules/listReducer';\r\n\r\nfunction UseControlPanelForm() {\r\n   const dispatch = useDispatch();\r\n   const selectedCar = useSelector( store => store.list.selectedCar );\r\n   const [ newCar, setNewCar ] = useState({ name: '', color: '#48bfee' });\r\n   const [ updatedCar, setUpdatedCar ] = useState({ name: '', color: '#48bfee' });\r\n   const [ updateBtnDisable, setUpdateBtnDisable ] = useState( true );\r\n   \r\n   useEffect(() => {\r\n      if ( !!selectedCar ) setUpdatedCar({ name: selectedCar.name, color: selectedCar.color });\r\n      else setUpdatedCar({ name: '', color: '#48bfee' });\r\n   }, [ selectedCar ]);\r\n\r\n   const submitNewCar = () => {\r\n      dispatch( addNewCar( newCar ) );\r\n      setNewCar({ name: '', color: '#48bfee' });\r\n   };\r\n   const submitUpdatedCar = () => {\r\n      dispatch( updateCar({ ...selectedCar, ...updatedCar }) )\r\n      setUpdatedCar({ name: '', color: '#48bfee' });\r\n      dispatch( setSelectedCar( undefined ) );\r\n   };\r\n\r\n   const handleNewCar = ( newData ) => setNewCar({ ...newCar, ...newData });\r\n   const handleUpdatedCar = ( newData ) => setUpdatedCar({ ...updatedCar, ...newData });\r\n\r\n   useEffect(() => {\r\n      if ( selectedCar && ( updatedCar.name !== selectedCar.name || updatedCar.color !== selectedCar.color ) ) {\r\n         setUpdateBtnDisable( false );\r\n      } else setUpdateBtnDisable( true );\r\n   }, [ updatedCar ])\r\n\r\n   return{\r\n      newCar,\r\n      updatedCar,\r\n      handleNewCar,\r\n      handleUpdatedCar,\r\n      submitNewCar,\r\n      submitUpdatedCar,\r\n      updateBtnDisable,\r\n   }\r\n}\r\n\r\nexport default UseControlPanelForm;"],"mappings":"+HAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAEtD,OAASC,SAAS,CAAEC,SAAS,KAAQ,2BAA2B,CAChE,OAASC,cAAc,KAAQ,2BAA2B,CAE1D,QAAS,CAAAC,mBAAmBA,CAAA,CAAG,CAC5B,KAAM,CAAAC,QAAQ,CAAGN,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAO,WAAW,CAAGN,WAAW,CAAEO,KAAK,EAAIA,KAAK,CAACC,IAAI,CAACF,WAAY,CAAC,CAClE,KAAM,CAAEG,MAAM,CAAEC,SAAS,CAAE,CAAGZ,QAAQ,CAAC,CAAEa,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,SAAU,CAAC,CAAC,CACtE,KAAM,CAAEC,UAAU,CAAEC,aAAa,CAAE,CAAGhB,QAAQ,CAAC,CAAEa,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,SAAU,CAAC,CAAC,CAC9E,KAAM,CAAEG,gBAAgB,CAAEC,mBAAmB,CAAE,CAAGlB,QAAQ,CAAE,IAAK,CAAC,CAElED,SAAS,CAAC,IAAM,CACb,GAAK,CAAC,CAACS,WAAW,CAAGQ,aAAa,CAAC,CAAEH,IAAI,CAAEL,WAAW,CAACK,IAAI,CAAEC,KAAK,CAAEN,WAAW,CAACM,KAAM,CAAC,CAAC,CAAC,IACpF,CAAAE,aAAa,CAAC,CAAEH,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,SAAU,CAAC,CAAC,CACrD,CAAC,CAAE,CAAEN,WAAW,CAAE,CAAC,CAEnB,KAAM,CAAAW,YAAY,CAAGA,CAAA,GAAM,CACxBZ,QAAQ,CAAEJ,SAAS,CAAEQ,MAAO,CAAE,CAAC,CAC/BC,SAAS,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,SAAU,CAAC,CAAC,CAC5C,CAAC,CACD,KAAM,CAAAM,gBAAgB,CAAGA,CAAA,GAAM,CAC5Bb,QAAQ,CAAEH,SAAS,CAAAiB,aAAA,CAAAA,aAAA,IAAMb,WAAW,EAAKO,UAAU,CAAE,CAAE,CAAC,CACxDC,aAAa,CAAC,CAAEH,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,SAAU,CAAC,CAAC,CAC7CP,QAAQ,CAAEF,cAAc,CAAEiB,SAAU,CAAE,CAAC,CAC1C,CAAC,CAED,KAAM,CAAAC,YAAY,CAAKC,OAAO,EAAMZ,SAAS,CAAAS,aAAA,CAAAA,aAAA,IAAMV,MAAM,EAAKa,OAAO,CAAE,CAAC,CACxE,KAAM,CAAAC,gBAAgB,CAAKD,OAAO,EAAMR,aAAa,CAAAK,aAAA,CAAAA,aAAA,IAAMN,UAAU,EAAKS,OAAO,CAAE,CAAC,CAEpFzB,SAAS,CAAC,IAAM,CACb,GAAKS,WAAW,GAAMO,UAAU,CAACF,IAAI,GAAKL,WAAW,CAACK,IAAI,EAAIE,UAAU,CAACD,KAAK,GAAKN,WAAW,CAACM,KAAK,CAAE,CAAG,CACtGI,mBAAmB,CAAE,KAAM,CAAC,CAC/B,CAAC,IAAM,CAAAA,mBAAmB,CAAE,IAAK,CAAC,CACrC,CAAC,CAAE,CAAEH,UAAU,CAAE,CAAC,CAElB,MAAM,CACHJ,MAAM,CACNI,UAAU,CACVQ,YAAY,CACZE,gBAAgB,CAChBN,YAAY,CACZC,gBAAgB,CAChBH,gBACH,CAAC,CACJ,CAEA,cAAe,CAAAX,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
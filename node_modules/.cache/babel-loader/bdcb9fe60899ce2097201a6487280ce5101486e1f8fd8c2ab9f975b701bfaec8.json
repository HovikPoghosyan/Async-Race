{"ast":null,"code":"import _objectSpread from\"C:/Users/Admin/Documents/GitHub/Async-Race/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect}from'react';import{useAppDispatch,useAppSelector}from'store/hooks/hooks';import{handleGarageRaceStatusesHistory}from'Storages/SessionStorage';import{fetchCarEngineMode,fetchCarDrive}from'CONSTANTS/Axios';import{deleteCar,newWinner,setSelectedCar,updateWinner}from'store/modules/listReducer';import styles from'./GarageTableRow.module.scss';const getAnimationStyle=(raceStatus,time)=>({animationName:styles.moveToEnd,animationDuration:\"\".concat(time,\"s\"),animationTimingFunction:'linear',animationDelay:'4.2s',animationFillMode:'forwards',animationPlayState:raceStatus==='brokenEngine'?'paused':'running'});function UseGarageTableRow(carData){const dispatch=useAppDispatch();const{id}=carData;const{selectedCar,race,winner,winnersList}=useAppSelector(store=>store.list);const[time,setTime]=useState(0);const[raceStatus,setRaceStatus]=useState(handleGarageRaceStatusesHistory('getItem',{key:id})||'stopped');const animationStyle=getAnimationStyle(raceStatus,time);useEffect(()=>{if(raceStatus!=='started'){handleGarageRaceStatusesHistory('update',{key:id,newValue:raceStatus});}},[raceStatus]);const handleStart=()=>{setRaceStatus('stopped');setTimeout(()=>{setRaceStatus('started');if((selectedCar===null||selectedCar===void 0?void 0:selectedCar.id)==id)dispatch(setSelectedCar(undefined));fetchCarEngineMode(id,'started').then(response=>{if(!(response!==null&&response!==void 0&&response.isFailed)){const raceTime=response.distance/(response.velocity*500);setTimeout(()=>fetchCarDrive(id).then(response=>{if(response!==null&&response!==void 0&&response.isFailed&&response.status==500){setRaceStatus('brokenEngine');}}),4200);setTime(raceTime);}else setRaceStatus('stopped');});},0);};const handleStop=()=>{fetchCarEngineMode(id,'stopped');setRaceStatus('stopped');};const toggleSelect=()=>dispatch(setSelectedCar((selectedCar===null||selectedCar===void 0?void 0:selectedCar.id)==id?undefined:carData));const handleDelete=()=>dispatch(deleteCar(id));const handleFinish=()=>{if(race&&!winner){const lastWin=winnersList.find(car=>car.id===id);const timeNewValue=Number((time*5).toFixed(3));if(lastWin)dispatch(updateWinner(_objectSpread(_objectSpread({},lastWin),{},{time:Math.min(lastWin.time,timeNewValue)})));else dispatch(newWinner(_objectSpread(_objectSpread({},carData),{},{time:timeNewValue})));}setRaceStatus('finished');};useEffect(()=>{if(race&&race!='finished')race==='started'?handleStart():handleStop();},[race]);return{handleStart,handleStop,toggleSelect,handleDelete,raceStatus,animationStyle,handleFinish};}export default UseGarageTableRow;","map":{"version":3,"names":["useState","useEffect","useAppDispatch","useAppSelector","handleGarageRaceStatusesHistory","fetchCarEngineMode","fetchCarDrive","deleteCar","newWinner","setSelectedCar","updateWinner","styles","getAnimationStyle","raceStatus","time","animationName","moveToEnd","animationDuration","concat","animationTimingFunction","animationDelay","animationFillMode","animationPlayState","UseGarageTableRow","carData","dispatch","id","selectedCar","race","winner","winnersList","store","list","setTime","setRaceStatus","key","animationStyle","newValue","handleStart","setTimeout","undefined","then","response","isFailed","raceTime","distance","velocity","status","handleStop","toggleSelect","handleDelete","handleFinish","lastWin","find","car","timeNewValue","Number","toFixed","_objectSpread","Math","min"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/components/commons/GarageTableRow/UseGarageTableRow.ts"],"sourcesContent":["import React, { FC, useState, useEffect, CSSProperties } from 'react';\nimport { useAppDispatch, useAppSelector } from 'store/hooks/hooks';\n\nimport { handleGarageRaceStatusesHistory } from 'Storages/SessionStorage';\nimport { fetchCarEngineMode, fetchCarDrive } from 'CONSTANTS/Axios';\nimport { deleteCar, newWinner, setSelectedCar, updateWinner } from 'store/modules/listReducer';\n\nimport styles from './GarageTableRow.module.scss';\n\ninterface CarData {\n   id: number;\n   name: string;\n   color: string;\n}\n\ntype RaceStatus = 'stopped' | 'started' | 'finished' | 'brokenEngine';\n\ninterface UseGarageTableRowReturn {\n   handleStart: () => void;\n   handleStop: () => void;\n   toggleSelect: () => void;\n   handleDelete: () => void;\n   raceStatus: RaceStatus;\n   animationStyle: CSSProperties;\n   handleFinish: () => void;\n}\n\nconst getAnimationStyle = (raceStatus: string, time: number): CSSProperties => ({\n   animationName: styles.moveToEnd,\n   animationDuration: `${time}s`,\n   animationTimingFunction: 'linear',\n   animationDelay: '4.2s',\n   animationFillMode: 'forwards',\n   animationPlayState: raceStatus === 'brokenEngine' ? 'paused' : 'running',\n});\n\nfunction UseGarageTableRow(carData: CarData): UseGarageTableRowReturn {\n   const dispatch = useAppDispatch();\n   const { id } = carData;\n   const { selectedCar, race, winner, winnersList } = useAppSelector((store) => store.list);\n   const [time, setTime] = useState<number>(0);\n   const [raceStatus, setRaceStatus] = useState<RaceStatus>(\n      (handleGarageRaceStatusesHistory('getItem', { key: id }) as RaceStatus) || 'stopped'\n   );\n   const animationStyle: CSSProperties = getAnimationStyle(raceStatus, time);\n   useEffect(() => {\n      if (raceStatus !== 'started') {\n         handleGarageRaceStatusesHistory('update', { key: id, newValue: raceStatus });\n      }\n   }, [raceStatus]);\n\n   const handleStart = () => {\n      setRaceStatus('stopped');\n      setTimeout(() => {\n         setRaceStatus('started');\n         if (selectedCar?.id == id) dispatch(setSelectedCar(undefined));\n         fetchCarEngineMode(id, 'started').then((response) => {\n            if (!response?.isFailed) {\n               const raceTime = response.distance / (response.velocity * 500);\n               setTimeout(\n                  () =>\n                     fetchCarDrive(id).then((response) => {\n                        if (response?.isFailed && response.status == 500) {\n                           setRaceStatus('brokenEngine');\n                        }\n                     }),\n                  4200\n               );\n\n               setTime(raceTime);\n            } else setRaceStatus('stopped');\n         });\n      }, 0);\n   };\n   const handleStop = () => {\n      fetchCarEngineMode(id, 'stopped');\n      setRaceStatus('stopped');\n   };\n   const toggleSelect = () => dispatch(setSelectedCar(selectedCar?.id == id ? undefined : carData));\n   const handleDelete = () => dispatch(deleteCar(id));\n   const handleFinish = () => {\n      if (race && !winner) {\n         const lastWin = winnersList.find((car) => car.id === id);\n         const timeNewValue = Number((time * 5).toFixed(3));\n         if (lastWin)\n            dispatch(\n               updateWinner({\n                  ...lastWin,\n                  time: Math.min(lastWin.time, timeNewValue),\n               })\n            );\n         else dispatch(newWinner({ ...carData, time: timeNewValue }));\n      }\n      setRaceStatus('finished');\n   };\n\n   useEffect(() => {\n      if (race && race != 'finished') race === 'started' ? handleStart() : handleStop();\n   }, [race]);\n\n   return { handleStart, handleStop, toggleSelect, handleDelete, raceStatus, animationStyle, handleFinish };\n}\n\nexport default UseGarageTableRow;\n"],"mappings":"+HAAA,OAAoBA,QAAQ,CAAEC,SAAS,KAAuB,OAAO,CACrE,OAASC,cAAc,CAAEC,cAAc,KAAQ,mBAAmB,CAElE,OAASC,+BAA+B,KAAQ,yBAAyB,CACzE,OAASC,kBAAkB,CAAEC,aAAa,KAAQ,iBAAiB,CACnE,OAASC,SAAS,CAAEC,SAAS,CAAEC,cAAc,CAAEC,YAAY,KAAQ,2BAA2B,CAE9F,MAAO,CAAAC,MAAM,KAAM,8BAA8B,CAoBjD,KAAM,CAAAC,iBAAiB,CAAGA,CAACC,UAAkB,CAAEC,IAAY,IAAqB,CAC7EC,aAAa,CAAEJ,MAAM,CAACK,SAAS,CAC/BC,iBAAiB,IAAAC,MAAA,CAAKJ,IAAI,KAAG,CAC7BK,uBAAuB,CAAE,QAAQ,CACjCC,cAAc,CAAE,MAAM,CACtBC,iBAAiB,CAAE,UAAU,CAC7BC,kBAAkB,CAAET,UAAU,GAAK,cAAc,CAAG,QAAQ,CAAG,SAClE,CAAC,CAAC,CAEF,QAAS,CAAAU,iBAAiBA,CAACC,OAAgB,CAA2B,CACnE,KAAM,CAAAC,QAAQ,CAAGvB,cAAc,CAAC,CAAC,CACjC,KAAM,CAAEwB,EAAG,CAAC,CAAGF,OAAO,CACtB,KAAM,CAAEG,WAAW,CAAEC,IAAI,CAAEC,MAAM,CAAEC,WAAY,CAAC,CAAG3B,cAAc,CAAE4B,KAAK,EAAKA,KAAK,CAACC,IAAI,CAAC,CACxF,KAAM,CAAClB,IAAI,CAAEmB,OAAO,CAAC,CAAGjC,QAAQ,CAAS,CAAC,CAAC,CAC3C,KAAM,CAACa,UAAU,CAAEqB,aAAa,CAAC,CAAGlC,QAAQ,CACxCI,+BAA+B,CAAC,SAAS,CAAE,CAAE+B,GAAG,CAAET,EAAG,CAAC,CAAC,EAAmB,SAC9E,CAAC,CACD,KAAM,CAAAU,cAA6B,CAAGxB,iBAAiB,CAACC,UAAU,CAAEC,IAAI,CAAC,CACzEb,SAAS,CAAC,IAAM,CACb,GAAIY,UAAU,GAAK,SAAS,CAAE,CAC3BT,+BAA+B,CAAC,QAAQ,CAAE,CAAE+B,GAAG,CAAET,EAAE,CAAEW,QAAQ,CAAExB,UAAW,CAAC,CAAC,CAC/E,CACH,CAAC,CAAE,CAACA,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAAyB,WAAW,CAAGA,CAAA,GAAM,CACvBJ,aAAa,CAAC,SAAS,CAAC,CACxBK,UAAU,CAAC,IAAM,CACdL,aAAa,CAAC,SAAS,CAAC,CACxB,GAAI,CAAAP,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAED,EAAE,GAAIA,EAAE,CAAED,QAAQ,CAAChB,cAAc,CAAC+B,SAAS,CAAC,CAAC,CAC9DnC,kBAAkB,CAACqB,EAAE,CAAE,SAAS,CAAC,CAACe,IAAI,CAAEC,QAAQ,EAAK,CAClD,GAAI,EAACA,QAAQ,SAARA,QAAQ,WAARA,QAAQ,CAAEC,QAAQ,EAAE,CACtB,KAAM,CAAAC,QAAQ,CAAGF,QAAQ,CAACG,QAAQ,EAAIH,QAAQ,CAACI,QAAQ,CAAG,GAAG,CAAC,CAC9DP,UAAU,CACP,IACGjC,aAAa,CAACoB,EAAE,CAAC,CAACe,IAAI,CAAEC,QAAQ,EAAK,CAClC,GAAIA,QAAQ,SAARA,QAAQ,WAARA,QAAQ,CAAEC,QAAQ,EAAID,QAAQ,CAACK,MAAM,EAAI,GAAG,CAAE,CAC/Cb,aAAa,CAAC,cAAc,CAAC,CAChC,CACH,CAAC,CAAC,CACL,IACH,CAAC,CAEDD,OAAO,CAACW,QAAQ,CAAC,CACpB,CAAC,IAAM,CAAAV,aAAa,CAAC,SAAS,CAAC,CAClC,CAAC,CAAC,CACL,CAAC,CAAE,CAAC,CAAC,CACR,CAAC,CACD,KAAM,CAAAc,UAAU,CAAGA,CAAA,GAAM,CACtB3C,kBAAkB,CAACqB,EAAE,CAAE,SAAS,CAAC,CACjCQ,aAAa,CAAC,SAAS,CAAC,CAC3B,CAAC,CACD,KAAM,CAAAe,YAAY,CAAGA,CAAA,GAAMxB,QAAQ,CAAChB,cAAc,CAAC,CAAAkB,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAED,EAAE,GAAIA,EAAE,CAAGc,SAAS,CAAGhB,OAAO,CAAC,CAAC,CAChG,KAAM,CAAA0B,YAAY,CAAGA,CAAA,GAAMzB,QAAQ,CAAClB,SAAS,CAACmB,EAAE,CAAC,CAAC,CAClD,KAAM,CAAAyB,YAAY,CAAGA,CAAA,GAAM,CACxB,GAAIvB,IAAI,EAAI,CAACC,MAAM,CAAE,CAClB,KAAM,CAAAuB,OAAO,CAAGtB,WAAW,CAACuB,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAAC5B,EAAE,GAAKA,EAAE,CAAC,CACxD,KAAM,CAAA6B,YAAY,CAAGC,MAAM,CAAC,CAAC1C,IAAI,CAAG,CAAC,EAAE2C,OAAO,CAAC,CAAC,CAAC,CAAC,CAClD,GAAIL,OAAO,CACR3B,QAAQ,CACLf,YAAY,CAAAgD,aAAA,CAAAA,aAAA,IACNN,OAAO,MACVtC,IAAI,CAAE6C,IAAI,CAACC,GAAG,CAACR,OAAO,CAACtC,IAAI,CAAEyC,YAAY,CAAC,EAC5C,CACJ,CAAC,CAAC,IACA,CAAA9B,QAAQ,CAACjB,SAAS,CAAAkD,aAAA,CAAAA,aAAA,IAAMlC,OAAO,MAAEV,IAAI,CAAEyC,YAAY,EAAE,CAAC,CAAC,CAC/D,CACArB,aAAa,CAAC,UAAU,CAAC,CAC5B,CAAC,CAEDjC,SAAS,CAAC,IAAM,CACb,GAAI2B,IAAI,EAAIA,IAAI,EAAI,UAAU,CAAEA,IAAI,GAAK,SAAS,CAAGU,WAAW,CAAC,CAAC,CAAGU,UAAU,CAAC,CAAC,CACpF,CAAC,CAAE,CAACpB,IAAI,CAAC,CAAC,CAEV,MAAO,CAAEU,WAAW,CAAEU,UAAU,CAAEC,YAAY,CAAEC,YAAY,CAAErC,UAAU,CAAEuB,cAAc,CAAEe,YAAa,CAAC,CAC3G,CAEA,cAAe,CAAA5B,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
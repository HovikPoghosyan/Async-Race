{"ast":null,"code":"const handleTablesPagesHistory=(action,props)=>{const data=JSON.parse(sessionStorage.getItem('tablesPagesHistory')||'{}');switch(action){case'update':if(props.key!=null&&props.newValue!=null){data[props.key]=props.newValue;}break;case'getItem':return data[props.key];case'get':return data;default:console.warn(\"Unknown action: \".concat(action));}if(action!='get'){sessionStorage.setItem('tablesPagesHistory',JSON.stringify(data));}};export default handleTablesPagesHistory;","map":{"version":3,"names":["handleTablesPagesHistory","action","props","data","JSON","parse","sessionStorage","getItem","key","newValue","console","warn","concat","setItem","stringify"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/Storages/SessionStorage.js"],"sourcesContent":["const handleTablesPagesHistory = (action, props) => {\n   const data = JSON.parse(sessionStorage.getItem('tablesPagesHistory') || '{}');\n\n   switch (action) {\n      case 'update':\n         if (props.key != null && props.newValue != null) {\n            data[props.key] = props.newValue;\n         }\n         break;\n\n      case 'getItem':\n         return data[props.key];\n\n      case 'get':\n         return data;\n\n      default:\n         console.warn(`Unknown action: ${action}`);\n   }\n\n   if (action != 'get') {\n      sessionStorage.setItem('tablesPagesHistory', JSON.stringify(data));\n   }\n};\n\nexport default handleTablesPagesHistory;\n"],"mappings":"AAAA,KAAM,CAAAA,wBAAwB,CAAGA,CAACC,MAAM,CAAEC,KAAK,GAAK,CACjD,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,oBAAoB,CAAC,EAAI,IAAI,CAAC,CAE7E,OAAQN,MAAM,EACX,IAAK,QAAQ,CACV,GAAIC,KAAK,CAACM,GAAG,EAAI,IAAI,EAAIN,KAAK,CAACO,QAAQ,EAAI,IAAI,CAAE,CAC9CN,IAAI,CAACD,KAAK,CAACM,GAAG,CAAC,CAAGN,KAAK,CAACO,QAAQ,CACnC,CACA,MAEH,IAAK,SAAS,CACX,MAAO,CAAAN,IAAI,CAACD,KAAK,CAACM,GAAG,CAAC,CAEzB,IAAK,KAAK,CACP,MAAO,CAAAL,IAAI,CAEd,QACGO,OAAO,CAACC,IAAI,oBAAAC,MAAA,CAAoBX,MAAM,CAAE,CAAC,CAC/C,CAEA,GAAIA,MAAM,EAAI,KAAK,CAAE,CAClBK,cAAc,CAACO,OAAO,CAAC,oBAAoB,CAAET,IAAI,CAACU,SAAS,CAACX,IAAI,CAAC,CAAC,CACrE,CACH,CAAC,CAED,cAAe,CAAAH,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
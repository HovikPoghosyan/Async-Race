{"ast":null,"code":"import _objectSpread from\"C:/Users/Admin/Documents/GitHub/Async-Race/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from'axios';const API_BASE='http://localhost:3000';const URLS={garage:\"\".concat(API_BASE,\"/garage\"),winners:\"\".concat(API_BASE,\"/winners\"),engine:\"\".concat(API_BASE,\"/engine\")};const ajax=async(url,_ref)=>{let{method='get',headers={},data={}}=_ref;try{const response=await axios({url,method,data,headers});return response===null||response===void 0?void 0:response.data;}catch(axiosError){var _axiosError$response,_axiosError$response$,_axiosError$response2,_axiosError$response3;return{isFailed:true,status:axiosError===null||axiosError===void 0?void 0:axiosError.status,errors:{message:(axiosError===null||axiosError===void 0?void 0:(_axiosError$response=axiosError.response)===null||_axiosError$response===void 0?void 0:(_axiosError$response$=_axiosError$response.data)===null||_axiosError$response$===void 0?void 0:_axiosError$response$.message)||axiosError.message||'Unknown Error',list:axiosError!==null&&axiosError!==void 0&&(_axiosError$response2=axiosError.response)!==null&&_axiosError$response2!==void 0&&(_axiosError$response3=_axiosError$response2.data)!==null&&_axiosError$response3!==void 0&&_axiosError$response3.errors?_objectSpread({},axiosError.response.data.errors):null}};}};const fetchGarageList=async()=>{const data=await ajax(URLS.garage,{method:'GET',headers:{},data:{}});return data;};const fetchWinnersList=async()=>{const data=await ajax(URLS.winners,{method:'GET',headers:{},data:{}});return data;};const fetchNewCar=async carData=>{const data=await ajax(URLS.garage,{method:'POST',headers:{'Content-Type':'application/json'},data:_objectSpread({},carData)});return data;};const fetchDeleteCar=async id=>{const data=await ajax(\"\".concat(URLS.garage,\"/\").concat(id),{method:'DELETE',headers:{},data:{}});return data;};const fetchUpdateCar=async carData=>{const data=await ajax(\"\".concat(URLS.garage,\"/\").concat(carData.id),{method:'PUT',headers:{'Content-Type':'application/json'},data:_objectSpread({},carData)});return data;};const fetchCarEngineMode=async(id,status)=>{const queryParams=new URLSearchParams({id,status});const data=await ajax(\"\".concat(URLS.engine,\"?\").concat(queryParams.toString()),{method:'PATCH',headers:{},data:{}});return data;};const fetchNewWinner=async carData=>{const data=await ajax(URLS.winners,{method:'POST',headers:{'Content-Type':'application/json'},data:{id:carData.id,wins:1,time:carData.time}});return data;};const fetchDeleteWinner=async id=>{const data=await ajax(\"\".concat(URLS.winners,\"/\").concat(id),{method:'DELETE',headers:{},data:{}});return data;};const fetchUpdateWinner=async carData=>{const data=await ajax(\"\".concat(URLS.winners,\"/\").concat(carData.id),{method:'PUT',headers:{'Content-Type':'application/json'},data:{wins:carData.wins+1,time:carData.time}});return data;};const fetchCarDrive=async id=>{const queryParams=new URLSearchParams({id,status:'drive'});const data=await ajax(\"\".concat(URLS.engine,\"?\").concat(queryParams.toString()),{method:'PATCH',headers:{},data:{}});return data;};export{fetchDeleteWinner,fetchGarageList,fetchWinnersList,fetchUpdateCar,fetchDeleteCar,fetchNewCar,fetchCarEngineMode,fetchNewWinner,fetchUpdateWinner,fetchCarDrive};export default ajax;","map":{"version":3,"names":["axios","API_BASE","URLS","garage","concat","winners","engine","ajax","url","_ref","method","headers","data","response","axiosError","_axiosError$response","_axiosError$response$","_axiosError$response2","_axiosError$response3","isFailed","status","errors","message","list","_objectSpread","fetchGarageList","fetchWinnersList","fetchNewCar","carData","fetchDeleteCar","id","fetchUpdateCar","fetchCarEngineMode","queryParams","URLSearchParams","toString","fetchNewWinner","wins","time","fetchDeleteWinner","fetchUpdateWinner","fetchCarDrive"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/CONSTANTS/Axios.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE = 'http://localhost:3000';\nconst URLS = {\n   garage: `${API_BASE}/garage`,\n   winners: `${API_BASE}/winners`,\n   engine: `${API_BASE}/engine`,\n};\n\nconst ajax = async (url, { method = 'get', headers = {}, data = {} }) => {\n   try {\n      const response = await axios({\n         url,\n         method,\n         data,\n         headers,\n      });\n      return response?.data;\n   } catch (axiosError) {\n      return {\n         isFailed: true,\n         status: axiosError?.status,\n         errors: {\n            message: axiosError?.response?.data?.message || axiosError.message || 'Unknown Error',\n            list: axiosError?.response?.data?.errors ? { ...axiosError.response.data.errors } : null,\n         },\n      };\n   }\n};\n\nconst fetchGarageList = async () => {\n   const data = await ajax(URLS.garage, {\n      method: 'GET',\n      headers: {},\n      data: {},\n   });\n\n   return data;\n};\n\nconst fetchWinnersList = async () => {\n   const data = await ajax(URLS.winners, {\n      method: 'GET',\n      headers: {},\n      data: {},\n   });\n\n   return data;\n};\n\nconst fetchNewCar = async (carData) => {\n   const data = await ajax(URLS.garage, {\n      method: 'POST',\n      headers: {\n         'Content-Type': 'application/json',\n      },\n      data: { ...carData },\n   });\n\n   return data;\n};\n\nconst fetchDeleteCar = async (id) => {\n   const data = await ajax(`${URLS.garage}/${id}`, {\n      method: 'DELETE',\n      headers: {},\n      data: {},\n   });\n\n   return data;\n};\n\nconst fetchUpdateCar = async (carData) => {\n   const data = await ajax(`${URLS.garage}/${carData.id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      data: { ...carData },\n   });\n\n   return data;\n};\n\nconst fetchCarEngineMode = async (id, status) => {\n   const queryParams = new URLSearchParams({ id, status });\n   const data = await ajax(`${URLS.engine}?${queryParams.toString()}`, {\n      method: 'PATCH',\n      headers: {},\n      data: {},\n   });\n\n   return data;\n};\n\nconst fetchNewWinner = async (carData) => {\n   const data = await ajax(URLS.winners, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      data: {\n         id: carData.id,\n         wins: 1,\n         time: carData.time,\n      },\n   });\n\n   return data;\n};\n\nconst fetchDeleteWinner = async (id) => {\n   const data = await ajax(`${URLS.winners}/${id}`, {\n      method: 'DELETE',\n      headers: {},\n      data: {},\n   });\n\n   return data;\n};\n\nconst fetchUpdateWinner = async (carData) => {\n   const data = await ajax(`${URLS.winners}/${carData.id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      data: {\n         wins: carData.wins + 1,\n         time: carData.time,\n      },\n   });\n\n   return data;\n};\n\nconst fetchCarDrive = async (id) => {\n   const queryParams = new URLSearchParams({ id, status: 'drive' });\n   const data = await ajax(`${URLS.engine}?${queryParams.toString()}`, {\n      method: 'PATCH',\n      headers: {},\n      data: {},\n   });\n\n   return data;\n};\n\nexport {\n   fetchDeleteWinner,\n   fetchGarageList,\n   fetchWinnersList,\n   fetchUpdateCar,\n   fetchDeleteCar,\n   fetchNewCar,\n   fetchCarEngineMode,\n   fetchNewWinner,\n   fetchUpdateWinner,\n   fetchCarDrive,\n};\nexport default ajax;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
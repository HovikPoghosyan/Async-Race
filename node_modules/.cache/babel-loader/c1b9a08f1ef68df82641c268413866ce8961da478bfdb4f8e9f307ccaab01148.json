{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\Async-Race\\\\src\\\\components\\\\commons\\\\WinnerTableHead\\\\WinnerTableHead.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAppDispatch, useAppSelector } from 'store/hooks/hooks';\nimport ToggleButton from '../ToggleButton/ToggleButton';\nimport styles from './WinnerTableHead.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WinnerTableHead() {\n  _s();\n  const dispatch = useAppDispatch();\n  const winnersList = useAppSelector(store => store.list.winnersList);\n  const [stortBy, setSortBy] = useState(undefined);\n  const [stortDirection, setSortDirection] = useState(undefined);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.winnerTableHead,\n    children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n      name: \"sortBy\",\n      valueOne: \"by Wins\",\n      valueTwo: \"by Time\",\n      startValue: null,\n      onToggle: newValue => {\n        if (newValue !== null) {\n          setSortBy(newValue);\n        }\n      },\n      uncheckedValue: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      name: \"sortDirection\",\n      valueOne: \"increasing\",\n      valueTwo: \"decreasing\",\n      startValue: null,\n      onToggle: newValue => {\n        if (newValue !== null) {\n          setSortDirection(newValue);\n        }\n      },\n      uncheckedValue: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n}\n_s(WinnerTableHead, \"Ff0hKfw9jGPd+vpALI/YbvjfBBs=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = WinnerTableHead;\nexport default WinnerTableHead;\nvar _c;\n$RefreshReg$(_c, \"WinnerTableHead\");","map":{"version":3,"names":["React","useState","useAppDispatch","useAppSelector","ToggleButton","styles","jsxDEV","_jsxDEV","WinnerTableHead","_s","dispatch","winnersList","store","list","stortBy","setSortBy","undefined","stortDirection","setSortDirection","className","winnerTableHead","children","name","valueOne","valueTwo","startValue","onToggle","newValue","uncheckedValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/components/commons/WinnerTableHead/WinnerTableHead.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks/hooks';\r\nimport ToggleButton from '../ToggleButton/ToggleButton';\r\n\r\n\r\nimport styles from './WinnerTableHead.module.scss';\r\n\r\nfunction WinnerTableHead() {\r\n   const dispatch = useAppDispatch();\r\n   const winnersList = useAppSelector( store => store.list.winnersList );\r\n   const [ stortBy, setSortBy ] = useState<string | undefined>(undefined)\r\n   const [ stortDirection, setSortDirection ] = useState<string | undefined>(undefined)\r\n   \r\n\r\n   return(\r\n      <div className={ styles.winnerTableHead }>\r\n         <ToggleButton  \r\n            name=\"sortBy\" \r\n            valueOne=\"by Wins\" \r\n            valueTwo=\"by Time\" \r\n            startValue={null} \r\n            onToggle={(newValue: string | null) => {\r\n               if (newValue !== null) {\r\n                  setSortBy(newValue);\r\n               }\r\n            }}\r\n            uncheckedValue={null}\r\n         />\r\n         <ToggleButton  \r\n            name=\"sortDirection\" \r\n            valueOne=\"increasing\" \r\n            valueTwo=\"decreasing\" \r\n            startValue={null} \r\n            onToggle={(newValue: string | null) => {\r\n               if (newValue !== null) {\r\n                  setSortDirection(newValue);\r\n               }\r\n            }}\r\n            uncheckedValue={null}\r\n         />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default WinnerTableHead;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,cAAc,QAAQ,mBAAmB;AAClE,OAAOC,YAAY,MAAM,8BAA8B;AAGvD,OAAOC,MAAM,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGR,cAAc,CAAC,CAAC;EACjC,MAAMS,WAAW,GAAGR,cAAc,CAAES,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACF,WAAY,CAAC;EACrE,MAAM,CAAEG,OAAO,EAAEC,SAAS,CAAE,GAAGd,QAAQ,CAAqBe,SAAS,CAAC;EACtE,MAAM,CAAEC,cAAc,EAAEC,gBAAgB,CAAE,GAAGjB,QAAQ,CAAqBe,SAAS,CAAC;EAGpF,oBACGT,OAAA;IAAKY,SAAS,EAAGd,MAAM,CAACe,eAAiB;IAAAC,QAAA,gBACtCd,OAAA,CAACH,YAAY;MACVkB,IAAI,EAAC,QAAQ;MACbC,QAAQ,EAAC,SAAS;MAClBC,QAAQ,EAAC,SAAS;MAClBC,UAAU,EAAE,IAAK;MACjBC,QAAQ,EAAGC,QAAuB,IAAK;QACpC,IAAIA,QAAQ,KAAK,IAAI,EAAE;UACpBZ,SAAS,CAACY,QAAQ,CAAC;QACtB;MACH,CAAE;MACFC,cAAc,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACFzB,OAAA,CAACH,YAAY;MACVkB,IAAI,EAAC,eAAe;MACpBC,QAAQ,EAAC,YAAY;MACrBC,QAAQ,EAAC,YAAY;MACrBC,UAAU,EAAE,IAAK;MACjBC,QAAQ,EAAGC,QAAuB,IAAK;QACpC,IAAIA,QAAQ,KAAK,IAAI,EAAE;UACpBT,gBAAgB,CAACS,QAAQ,CAAC;QAC7B;MACH,CAAE;MACFC,cAAc,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEZ;AAACvB,EAAA,CAnCQD,eAAe;EAAA,QACJN,cAAc,EACXC,cAAc;AAAA;AAAA8B,EAAA,GAF5BzB,eAAe;AAqCxB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { handleGarageRaceStatusesHistory } from 'Storages/SessionStorage';\nimport { fetchCarDrive } from 'CONSTANTS/Axios';\nimport { deleteCar, setRace, setSelectedCar } from 'store/modules/listReducer';\nimport styles from './GarageTableRow.module.scss';\nfunction UseGarageTableRow(carData) {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = carData;\n  const {\n    selectedCar,\n    race,\n    winner\n  } = useSelector(store => store.list);\n  const [time, setTime] = useState(0);\n  const [raceStatus, setRaceStatus] = useState(handleGarageRaceStatusesHistory('getItem', {\n    key: id\n  }) || 'stopped');\n  const animationStyle = {\n    animation: `${styles.moveToEnd} ${time}s linear 4.2s forwards`\n  };\n  useEffect(() => {\n    handleGarageRaceStatusesHistory('update', {\n      key: id,\n      newValue: raceStatus != 'stopped' ? 'finished' : 'stopped'\n    });\n  }, [raceStatus]);\n  const handleStart = () => {\n    if ((selectedCar === null || selectedCar === void 0 ? void 0 : selectedCar.id) == id) dispatch(setSelectedCar(undefined));\n    setRaceStatus('started');\n    fetchCarDrive(id, 'started').then(response => {\n      if (response !== null && response !== void 0 && response.isFailed) setRaceStatus('stopped');else {\n        const raceTime = response.distance / (response.velocity * 1500);\n        setTime(raceTime);\n        // if ( race && !winner )\n      }\n    });\n  };\n  const handleStop = () => {\n    fetchCarDrive(id, 'stopped');\n    setRaceStatus('stopped');\n  };\n  const toggleSelect = () => dispatch(setSelectedCar((selectedCar === null || selectedCar === void 0 ? void 0 : selectedCar.id) == id ? undefined : carData));\n  const handleDelete = () => dispatch(deleteCar(id));\n  const handleFinish = () => setRaceStatus('finished');\n  useEffect(() => {\n    if (race != undefined) {\n      if (race) {\n        handleStop();\n        // handleStart();\n      } else handleStop();\n    }\n  }, [race]);\n  return {\n    handleStart,\n    handleStop,\n    toggleSelect,\n    handleDelete,\n    raceStatus,\n    animationStyle,\n    handleFinish\n  };\n}\n_s(UseGarageTableRow, \"MYcZ6yFuN0TV42UskB7f60qtylE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = UseGarageTableRow;\nexport default UseGarageTableRow;\nvar _c;\n$RefreshReg$(_c, \"UseGarageTableRow\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","handleGarageRaceStatusesHistory","fetchCarDrive","deleteCar","setRace","setSelectedCar","styles","UseGarageTableRow","carData","_s","dispatch","id","selectedCar","race","winner","store","list","time","setTime","raceStatus","setRaceStatus","key","animationStyle","animation","moveToEnd","newValue","handleStart","undefined","then","response","isFailed","raceTime","distance","velocity","handleStop","toggleSelect","handleDelete","handleFinish","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/components/commons/GarageTableRow/UseGarageTableRow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { handleGarageRaceStatusesHistory } from 'Storages/SessionStorage';\r\nimport { fetchCarDrive } from 'CONSTANTS/Axios';\r\nimport { deleteCar, setRace, setSelectedCar } from 'store/modules/listReducer';\r\n\r\nimport styles from './GarageTableRow.module.scss';\r\n\r\nfunction UseGarageTableRow( carData ) {\r\n   const dispatch = useDispatch();\r\n   const { id } = carData;\r\n   const { selectedCar, race, winner } = useSelector( store => store.list );\r\n   const [ time, setTime ] = useState( 0 );\r\n   const [ raceStatus, setRaceStatus ] = useState( handleGarageRaceStatusesHistory( 'getItem', { key: id } ) || 'stopped' );\r\n   const animationStyle = { animation: `${ styles.moveToEnd } ${ time }s linear 4.2s forwards` };\r\n\r\n   useEffect( () => {\r\n      handleGarageRaceStatusesHistory( 'update', { key: id, newValue: raceStatus != 'stopped' ? 'finished' : 'stopped' } );\r\n   }, [ raceStatus ] );\r\n\r\n\r\n   const handleStart = () => {\r\n      if ( selectedCar?.id == id ) dispatch( setSelectedCar( undefined ) );\r\n      setRaceStatus( 'started' );\r\n      fetchCarDrive( id, 'started' )\r\n      .then( response => {\r\n         if ( response?.isFailed ) setRaceStatus( 'stopped' );\r\n         else {\r\n            const raceTime = response.distance / ( response.velocity * 1500 );\r\n            setTime( raceTime );\r\n            // if ( race && !winner )\r\n         }\r\n      });\r\n   };\r\n   const handleStop = () => {\r\n      fetchCarDrive( id, 'stopped' );\r\n      setRaceStatus( 'stopped' );\r\n   };\r\n   const toggleSelect = () => dispatch( setSelectedCar( selectedCar?.id == id ? undefined : carData ) );\r\n   const handleDelete = () => dispatch( deleteCar( id ) );\r\n   const handleFinish = () => setRaceStatus( 'finished' );\r\n\r\n   useEffect( () => {\r\n      if ( race != undefined ) {\r\n         if ( race ) {\r\n            handleStop();\r\n            // handleStart();\r\n         } else handleStop();\r\n      }\r\n   }, [ race ] );\r\n   \r\n   return {\r\n      handleStart,\r\n      handleStop,\r\n      toggleSelect,\r\n      handleDelete,\r\n      raceStatus,\r\n      animationStyle,\r\n      handleFinish,\r\n   }\r\n}\r\n\r\nexport default UseGarageTableRow;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,+BAA+B,QAAQ,yBAAyB;AACzE,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,SAAS,EAAEC,OAAO,EAAEC,cAAc,QAAQ,2BAA2B;AAE9E,OAAOC,MAAM,MAAM,8BAA8B;AAEjD,SAASC,iBAAiBA,CAAEC,OAAO,EAAG;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY;EAAG,CAAC,GAAGH,OAAO;EACtB,MAAM;IAAEI,WAAW;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGd,WAAW,CAAEe,KAAK,IAAIA,KAAK,CAACC,IAAK,CAAC;EACxE,MAAM,CAAEC,IAAI,EAAEC,OAAO,CAAE,GAAGrB,QAAQ,CAAE,CAAE,CAAC;EACvC,MAAM,CAAEsB,UAAU,EAAEC,aAAa,CAAE,GAAGvB,QAAQ,CAAEI,+BAA+B,CAAE,SAAS,EAAE;IAAEoB,GAAG,EAAEV;EAAG,CAAE,CAAC,IAAI,SAAU,CAAC;EACxH,MAAMW,cAAc,GAAG;IAAEC,SAAS,EAAE,GAAIjB,MAAM,CAACkB,SAAS,IAAMP,IAAI;EAA0B,CAAC;EAE7FnB,SAAS,CAAE,MAAM;IACdG,+BAA+B,CAAE,QAAQ,EAAE;MAAEoB,GAAG,EAAEV,EAAE;MAAEc,QAAQ,EAAEN,UAAU,IAAI,SAAS,GAAG,UAAU,GAAG;IAAU,CAAE,CAAC;EACvH,CAAC,EAAE,CAAEA,UAAU,CAAG,CAAC;EAGnB,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACvB,IAAK,CAAAd,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAED,EAAE,KAAIA,EAAE,EAAGD,QAAQ,CAAEL,cAAc,CAAEsB,SAAU,CAAE,CAAC;IACpEP,aAAa,CAAE,SAAU,CAAC;IAC1BlB,aAAa,CAAES,EAAE,EAAE,SAAU,CAAC,CAC7BiB,IAAI,CAAEC,QAAQ,IAAI;MAChB,IAAKA,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEC,QAAQ,EAAGV,aAAa,CAAE,SAAU,CAAC,CAAC,KAChD;QACF,MAAMW,QAAQ,GAAGF,QAAQ,CAACG,QAAQ,IAAKH,QAAQ,CAACI,QAAQ,GAAG,IAAI,CAAE;QACjEf,OAAO,CAAEa,QAAS,CAAC;QACnB;MACH;IACH,CAAC,CAAC;EACL,CAAC;EACD,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACtBhC,aAAa,CAAES,EAAE,EAAE,SAAU,CAAC;IAC9BS,aAAa,CAAE,SAAU,CAAC;EAC7B,CAAC;EACD,MAAMe,YAAY,GAAGA,CAAA,KAAMzB,QAAQ,CAAEL,cAAc,CAAE,CAAAO,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAED,EAAE,KAAIA,EAAE,GAAGgB,SAAS,GAAGnB,OAAQ,CAAE,CAAC;EACpG,MAAM4B,YAAY,GAAGA,CAAA,KAAM1B,QAAQ,CAAEP,SAAS,CAAEQ,EAAG,CAAE,CAAC;EACtD,MAAM0B,YAAY,GAAGA,CAAA,KAAMjB,aAAa,CAAE,UAAW,CAAC;EAEtDtB,SAAS,CAAE,MAAM;IACd,IAAKe,IAAI,IAAIc,SAAS,EAAG;MACtB,IAAKd,IAAI,EAAG;QACTqB,UAAU,CAAC,CAAC;QACZ;MACH,CAAC,MAAMA,UAAU,CAAC,CAAC;IACtB;EACH,CAAC,EAAE,CAAErB,IAAI,CAAG,CAAC;EAEb,OAAO;IACJa,WAAW;IACXQ,UAAU;IACVC,YAAY;IACZC,YAAY;IACZjB,UAAU;IACVG,cAAc;IACde;EACH,CAAC;AACJ;AAAC5B,EAAA,CApDQF,iBAAiB;EAAA,QACNR,WAAW,EAEUC,WAAW;AAAA;AAAAsC,EAAA,GAH3C/B,iBAAiB;AAsD1B,eAAeA,iBAAiB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
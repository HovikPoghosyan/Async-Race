{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchGarageList, fetchWinnersList, fetchNewCar, fetchDeleteCar } from 'CONSTANTS/Axios';\nconst addNewCar = createAsyncThunk('list/addNewCar', async (carData, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const data = await fetchNewCar(carData);\n  if (data.isFailed) return rejectWithValue();\n  dispatch(getGarageLists()).unwrap();\n  return data;\n});\nconst deleteCar = createAsyncThunk('list/deleteCar', async (id, {\n  rejectWithValue,\n  dispatch\n}) => {\n  console.log('deleting: ', id);\n  const data = await fetchDeleteCar(id);\n  if (data.isFailed) return rejectWithValue();\n  dispatch(getGarageLists()).unwrap();\n  return data;\n});\nconst getGarageLists = createAsyncThunk('list/getGarageLists', async (props, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const data = await fetchGarageList();\n  if (data.isFailed) return rejectWithValue();\n  dispatch(getWinnersLists()).unwrap();\n  return data;\n});\nconst getWinnersLists = createAsyncThunk('list/getWinnersLists', async (props, {\n  rejectWithValue\n}) => {\n  const data = await fetchWinnersList();\n  if (data.isFailed) return rejectWithValue();\n  return data;\n});\nconst initialState = {\n  garageList: [],\n  winnersList: [],\n  selectedCar: undefined,\n  loading: false\n};\nconst appSlice = createSlice({\n  name: 'list',\n  initialState,\n  reducers: {\n    setGarageList(state, {\n      payload\n    }) {\n      state.garageList = payload;\n    },\n    setSelectedCar(state, {\n      payload\n    }) {}\n  },\n  extraReducers: builder => {\n    builder.addCase(deleteCar.pending, state => {\n      state.loading = true;\n    }).addCase(addNewCar.pending, state => {\n      state.loading = true;\n    }).addCase(getGarageLists.pending, state => {\n      state.loading = true;\n    }).addCase(getGarageLists.fulfilled, (state, {\n      payload\n    }) => {\n      state.garageList = payload;\n    }).addCase(getWinnersLists.pending, state => {\n      state.loading = true;\n    }).addCase(getWinnersLists.fulfilled, (state, {\n      payload\n    }) => {\n      state.winnersList = payload.map(winner => {\n        var _car$name, _car$color;\n        const car = state.garageList.find(current => current.id === winner.id);\n        if (car !== null && car !== void 0 && car.name && car !== null && car !== void 0 && car.color) return {\n          ...winner,\n          name: (_car$name = car === null || car === void 0 ? void 0 : car.name) !== null && _car$name !== void 0 ? _car$name : 'Unknown',\n          color: (_car$color = car === null || car === void 0 ? void 0 : car.color) !== null && _car$color !== void 0 ? _car$color : '#000'\n        };\n      });\n      state.loading = false;\n    }).addCase(getWinnersLists.rejected, state => {\n      state.loading = false;\n    });\n  }\n});\nexport const {} = appSlice.actions;\nexport { getGarageLists, getWinnersLists, addNewCar, deleteCar };\nexport default appSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchGarageList","fetchWinnersList","fetchNewCar","fetchDeleteCar","addNewCar","carData","rejectWithValue","dispatch","data","isFailed","getGarageLists","unwrap","deleteCar","id","console","log","props","getWinnersLists","initialState","garageList","winnersList","selectedCar","undefined","loading","appSlice","name","reducers","setGarageList","state","payload","setSelectedCar","extraReducers","builder","addCase","pending","fulfilled","map","winner","_car$name","_car$color","car","find","current","color","rejected","actions","reducer"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/store/modules/listReducer.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { fetchGarageList, fetchWinnersList, fetchNewCar, fetchDeleteCar } from 'CONSTANTS/Axios';\n\nconst addNewCar = createAsyncThunk(\n   'list/addNewCar',\n   async ( carData, { rejectWithValue, dispatch }) => {\n      const data = await fetchNewCar( carData );\n      if ( data.isFailed ) return rejectWithValue();\n      \n      dispatch( getGarageLists() ).unwrap();\n\n      return data;\n   }\n);\n\nconst deleteCar = createAsyncThunk(\n   'list/deleteCar',\n   async ( id, { rejectWithValue, dispatch }) => {\n      console.log('deleting: ', id)\n      const data = await fetchDeleteCar( id );\n      if ( data.isFailed ) return rejectWithValue();\n      \n      dispatch( getGarageLists() ).unwrap();\n\n      return data;\n   }\n);\n\nconst getGarageLists = createAsyncThunk(\n   'list/getGarageLists',\n   async ( props, { rejectWithValue, dispatch }) => {\n      const data = await fetchGarageList();\n      if ( data.isFailed ) return rejectWithValue();\n         \n      dispatch( getWinnersLists() ).unwrap();\n\n      return data;\n   }\n);\n\nconst getWinnersLists = createAsyncThunk(\n   'list/getWinnersLists',\n   async ( props, { rejectWithValue }) => {\n      const data = await fetchWinnersList();\n      if ( data.isFailed ) return rejectWithValue();\n\n      return data;\n   }\n);\n\n\nconst initialState = {\n   garageList: [],\n   winnersList: [],\n   selectedCar: undefined,\n   loading: false,\n};\n\nconst appSlice = createSlice({\n   name: 'list',\n   initialState,\n   reducers: {\n      setGarageList( state, { payload } ) {\n         state.garageList = payload;\n      },\n      setSelectedCar( state, { payload } ) {\n         \n      }\n   },\n   extraReducers: ( builder ) => {\n      builder\n      .addCase( deleteCar.pending, ( state ) => {\n         state.loading = true;\n      })\n      .addCase( addNewCar.pending, ( state ) => {\n         state.loading = true;\n      })\n      .addCase( getGarageLists.pending, ( state ) => {\n         state.loading = true;\n      })\n      .addCase( getGarageLists.fulfilled, ( state, { payload } ) => {\n         state.garageList = payload;\n      })\n      .addCase( getWinnersLists.pending, ( state ) => {\n         state.loading = true;\n      })\n      .addCase( getWinnersLists.fulfilled, ( state, { payload } ) => {\n         state.winnersList = payload.map( winner => {\n            const car = state.garageList.find( current => current.id === winner.id );\n            if ( car?.name && car?.color ) return {\n               ...winner,\n               name: car?.name ?? 'Unknown',\n               color: car?.color ?? '#000',\n            };\n         }) ;\n         state.loading = false;\n      })\n      .addCase( getWinnersLists.rejected, ( state ) => {\n         state.loading = false;\n      })\n   }\n});\n\nexport const { \n} = appSlice.actions;\nexport { \n   getGarageLists,\n   getWinnersLists,\n   addNewCar,\n   deleteCar,\n};\nexport default appSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
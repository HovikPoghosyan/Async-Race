{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchGarageList, fetchWinnersList } from 'CONSTANTS/Axios';\nconst getGarageList = createAsyncThunk('list/getGarageList', async (props, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const garageList = await fetchGarageList();\n  if (garageList.isFailed) return rejectWithValue();\n  const winnersData = await dispatch(getWinnersList()).unwrap();\n  if (winnersData.isFailed) return rejectWithValue();\n  const resultList = garageData.map(car => {\n    var _winsData$wins, _winsData$time;\n    const winsData = winnersData.find(current => current.id === car.id);\n    return {\n      ...car,\n      wins: (_winsData$wins = winsData === null || winsData === void 0 ? void 0 : winsData.wins) !== null && _winsData$wins !== void 0 ? _winsData$wins : 0,\n      time: (_winsData$time = winsData === null || winsData === void 0 ? void 0 : winsData.time) !== null && _winsData$time !== void 0 ? _winsData$time : 0\n    };\n  });\n  return data;\n});\nconst getWinnersList = createAsyncThunk('list/getWinnersList', async (props, {\n  rejectWithValue\n}) => {\n  const data = await fetchWinnersList();\n  if (data.isFailed) return rejectWithValue();\n  return data;\n});\nconst initialState = {\n  garageList: [],\n  winnersList: [],\n  loading: false\n};\nconst appSlice = createSlice({\n  name: 'list',\n  initialState,\n  reducers: {\n    setGarageList(state, {\n      payload\n    }) {\n      state.garageList = payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getGarageList.pending, state => {\n      state.loading = true;\n    }).addCase(getGarageList.fulfilled, (state, {\n      payload\n    }) => {\n      state.garageList = payload;\n      // state.loading = false;\n    }).addCase(getGarageList.rejected, state => {\n      // state.loading = false;\n    }).addCase(getWinnersList.pending, state => {\n      state.loading = true;\n    }).addCase(getWinnersList.fulfilled, (state, {\n      payload\n    }) => {\n      state.garageList = payload;\n      state.loading = false;\n    }).addCase(getWinnersList.rejected, state => {\n      state.loading = false;\n    });\n  }\n});\nexport const {\n  setGarageList\n} = appSlice.actions;\nexport { getGarageList, getWinnersList };\nexport default appSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchGarageList","fetchWinnersList","getGarageList","props","rejectWithValue","dispatch","garageList","isFailed","winnersData","getWinnersList","unwrap","resultList","garageData","map","car","_winsData$wins","_winsData$time","winsData","find","current","id","wins","time","data","initialState","winnersList","loading","appSlice","name","reducers","setGarageList","state","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/store/modules/listReducer.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { fetchGarageList, fetchWinnersList } from 'CONSTANTS/Axios';\n\n\nconst getGarageList = createAsyncThunk( \n   'list/getGarageList',\n   async ( props, { rejectWithValue, dispatch } ) => {\n      const garageList = await fetchGarageList( );\n\n      if ( garageList.isFailed ) return rejectWithValue();\n      \n      const winnersData = await dispatch( getWinnersList() ).unwrap()\n      if ( winnersData.isFailed ) return rejectWithValue();\n\n      const resultList = garageData.map( car => {\n         const winsData = winnersData.find( current => current.id === car.id)\n         return {\n            ...car,\n            wins: winsData?.wins ?? 0,\n            time: winsData?.time ?? 0,\n         }\n      })\n\n      return data;\n   }\n); \n\nconst getWinnersList = createAsyncThunk( \n   'list/getWinnersList',\n   async ( props, { rejectWithValue } ) => {\n      const data = await fetchWinnersList( );\n\n      if ( data.isFailed ) return rejectWithValue();\n\n      return data;\n   }\n); \n\nconst initialState = {\n   garageList: [],\n   winnersList: [],\n   loading: false,\n};\n\nconst appSlice = createSlice({\n   name: 'list',\n   initialState,\n   reducers: {\n      setGarageList( state, { payload } ) {\n         state.garageList = payload;\n      },\n   },\n   extraReducers: ( builder ) => {\n      builder\n      .addCase( getGarageList.pending, ( state ) => {\n         state.loading = true;\n      })\n      .addCase( getGarageList.fulfilled, ( state, { payload } ) => {\n         state.garageList = payload;\n         // state.loading = false;\n      })\n      .addCase( getGarageList.rejected, ( state ) => {\n         // state.loading = false;\n      })\n      .addCase( getWinnersList.pending, ( state ) => {\n         state.loading = true;\n      })\n      .addCase( getWinnersList.fulfilled, ( state, { payload } ) => {\n         state.garageList = payload;\n         state.loading = false;\n      })\n      .addCase( getWinnersList.rejected, ( state ) => {\n         state.loading = false;\n      })\n   }\n});\n\nexport const { \n   setGarageList,\n} = appSlice.actions;\nexport { \n   getGarageList,\n   getWinnersList,\n};\nexport default appSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
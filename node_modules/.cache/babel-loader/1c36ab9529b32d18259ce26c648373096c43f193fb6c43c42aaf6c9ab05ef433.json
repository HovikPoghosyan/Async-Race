{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\Async-Race\\\\src\\\\RoutesConfig\\\\RoutesConfig.tsx\";\nimport React from 'react';\nimport { createBrowserRouter, Navigate } from 'react-router-dom';\nimport App from 'App/App';\nimport Garage from 'pages/Garage/Garage';\nimport Winners from 'pages/Winners/Winners';\nimport NotFound from 'pages/NotFound/NotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction routesConfig() {\n  const routes = [{\n    path: '/Async-Race',\n    element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 19\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        replace: true,\n        to: \"garage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this)\n    }, {\n      path: 'garage',\n      element: /*#__PURE__*/_jsxDEV(Garage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this)\n    }, {\n      path: 'winners',\n      element: /*#__PURE__*/_jsxDEV(Winners, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this)\n    }, {\n      path: '*',\n      element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)\n    }]\n  }];\n  return createBrowserRouter(routes);\n}\nexport default routesConfig;","map":{"version":3,"names":["React","createBrowserRouter","Navigate","App","Garage","Winners","NotFound","jsxDEV","_jsxDEV","routesConfig","routes","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","replace","to"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/RoutesConfig/RoutesConfig.tsx"],"sourcesContent":["import React from 'react';\nimport { createBrowserRouter, Navigate, RouteObject } from 'react-router-dom';\n\nimport App from 'App/App';\nimport Garage from 'pages/Garage/Garage';\nimport Winners from 'pages/Winners/Winners';\nimport NotFound from 'pages/NotFound/NotFound';\n\nfunction routesConfig(): ReturnType<typeof createBrowserRouter> {\n   const routes: RouteObject[] = [\n      {\n         path: '/Async-Race',\n         element: <App />,\n         children: [\n            {\n               index: true,\n               element: <Navigate replace to=\"garage\" />,\n            },\n            {\n               path: 'garage',\n               element: <Garage />,\n            },\n            {\n               path: 'winners',\n               element: <Winners />,\n            },\n            {\n               path: '*',\n               element: <NotFound />,\n            },\n         ],\n      },\n   ];\n\n   return createBrowserRouter(routes);\n}\n\nexport default routesConfig;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAAEC,QAAQ,QAAqB,kBAAkB;AAE7E,OAAOC,GAAG,MAAM,SAAS;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,QAAQ,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,YAAYA,CAAA,EAA2C;EAC7D,MAAMC,MAAqB,GAAG,CAC3B;IACGC,IAAI,EAAE,aAAa;IACnBC,OAAO,eAAEJ,OAAA,CAACL,GAAG;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAChBC,QAAQ,EAAE,CACP;MACGC,KAAK,EAAE,IAAI;MACXN,OAAO,eAAEJ,OAAA,CAACN,QAAQ;QAACiB,OAAO;QAACC,EAAE,EAAC;MAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC3C,CAAC,EACD;MACGL,IAAI,EAAE,QAAQ;MACdC,OAAO,eAAEJ,OAAA,CAACJ,MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACrB,CAAC,EACD;MACGL,IAAI,EAAE,SAAS;MACfC,OAAO,eAAEJ,OAAA,CAACH,OAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACtB,CAAC,EACD;MACGL,IAAI,EAAE,GAAG;MACTC,OAAO,eAAEJ,OAAA,CAACF,QAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACvB,CAAC;EAEP,CAAC,CACH;EAED,OAAOf,mBAAmB,CAACS,MAAM,CAAC;AACrC;AAEA,eAAeD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
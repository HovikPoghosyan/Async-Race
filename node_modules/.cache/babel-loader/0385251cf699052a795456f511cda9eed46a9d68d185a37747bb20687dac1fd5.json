{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\Async-Race\\\\src\\\\components\\\\featues\\\\WinnersTable\\\\WinnersTable.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from 'store/hooks/hooks';\nimport handleTablesPagesHistory from 'Storages/SessionStorage';\nimport { getWinnersListPage } from 'store/modules/winnersListReducer';\nimport WinnersTableRow from 'components/commons/WinnersTableRow/WinnersTableRow';\nimport Pagination from 'components/commons/Pagination/Pagination';\nimport WinnerTableHead from 'components/commons/WinnerTableHead/WinnerTableHead';\nimport styles from './WinnersTable.module.scss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WinnersTable({\n  list\n}) {\n  _s();\n  const dispatch = useAppDispatch();\n  const count = useAppSelector(store => store.winnersList.count);\n  const pageInHistory = handleTablesPagesHistory('getItem', {\n    key: 'winnersTable'\n  });\n  const visibleitemsCount = 10;\n  const maxPageCount = Math.ceil(list.length / visibleitemsCount);\n  const [pageNo, setPageNo] = useState(pageInHistory <= maxPageCount ? pageInHistory : maxPageCount);\n  useEffect(() => {\n    handleTablesPagesHistory('update', {\n      key: 'winnersTable',\n      newValue: pageNo\n    });\n    if (list.length <= (pageNo - 1) * visibleitemsCount) dispatch(getWinnersListPage(pageNo));\n  }, [pageNo]);\n  const handlePageChange = No => setPageNo(No);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WinnerTableHead, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Car\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Best Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: list.slice((pageNo - 1) * visibleitemsCount, pageNo * visibleitemsCount).map(car => /*#__PURE__*/_jsxDEV(WinnersTableRow, {\n          carData: car\n        }, car === null || car === void 0 ? void 0 : car.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }, this), list.length >= visibleitemsCount ? /*#__PURE__*/_jsxDEV(Pagination, {\n      count: count,\n      pageNo: pageNo,\n      changePage: No => handlePageChange(No),\n      visibleitemsCount: visibleitemsCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true);\n}\n_s(WinnersTable, \"Fv0igcJb1jOqzvq8yp1AQ5PaKB0=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = WinnersTable;\nexport default WinnersTable;\nvar _c;\n$RefreshReg$(_c, \"WinnersTable\");","map":{"version":3,"names":["React","useState","useEffect","useAppDispatch","useAppSelector","handleTablesPagesHistory","getWinnersListPage","WinnersTableRow","Pagination","WinnerTableHead","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","WinnersTable","list","_s","dispatch","count","store","winnersList","pageInHistory","key","visibleitemsCount","maxPageCount","Math","ceil","length","pageNo","setPageNo","newValue","handlePageChange","No","children","fileName","_jsxFileName","lineNumber","columnNumber","className","table","slice","map","car","carData","id","changePage","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/components/featues/WinnersTable/WinnersTable.tsx"],"sourcesContent":["import React, { useState, useEffect, FC } from 'react';\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks/hooks';\r\n\r\nimport handleTablesPagesHistory from 'Storages/SessionStorage';\r\n\r\nimport { getWinnersListPage } from 'store/modules/winnersListReducer';\r\n\r\nimport WinnersTableRow from 'components/commons/WinnersTableRow/WinnersTableRow';\r\nimport Pagination from 'components/commons/Pagination/Pagination';\r\nimport WinnerTableHead from 'components/commons/WinnerTableHead/WinnerTableHead';\r\n\r\nimport { Winner } from 'store/modules/winnersListReducer';\r\nimport styles from './WinnersTable.module.scss';\r\n\r\ninterface WinnersTableProps {\r\n   list: Winner[];\r\n}\r\n\r\nfunction WinnersTable({ list }: WinnersTableProps) {\r\n   const dispatch = useAppDispatch();\r\n   const count = useAppSelector(store => store.winnersList.count);\r\n   const pageInHistory = handleTablesPagesHistory('getItem', { key: 'winnersTable' });\r\n   const visibleitemsCount = 10;\r\n   const maxPageCount = Math.ceil(list.length / visibleitemsCount);\r\n   const [pageNo, setPageNo] = useState(pageInHistory <= maxPageCount ? pageInHistory : maxPageCount);\r\n\r\n   useEffect(() => {\r\n      handleTablesPagesHistory('update', { key: 'winnersTable', newValue: pageNo });\r\n      if (list.length <= (pageNo - 1) * visibleitemsCount) dispatch( getWinnersListPage( pageNo ));\r\n   }, [pageNo]);\r\n   const handlePageChange = (No: number) => setPageNo(No);\r\n   return (\r\n      <>\r\n         <WinnerTableHead />\r\n         <table className={styles.table}>\r\n            <thead>\r\n               <tr>\r\n                  <th>No</th>\r\n                  <th>Car</th>\r\n                  <th>Name</th>\r\n                  <th>Wins</th>\r\n                  <th>Best Time</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {list.slice((pageNo - 1) * visibleitemsCount, pageNo * visibleitemsCount).map((car: Winner) => (\r\n                  <WinnersTableRow key={car?.id} carData={car} />\r\n               ))}\r\n            </tbody>\r\n         </table>\r\n         {list.length >= visibleitemsCount ? (\r\n            <Pagination\r\n               count={count}\r\n               pageNo={pageNo}\r\n               changePage={(No: number) => handlePageChange(No)}\r\n               visibleitemsCount={visibleitemsCount}\r\n            />\r\n         ) : null}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default WinnersTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
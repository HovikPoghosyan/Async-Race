{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\Async-Race\\\\src\\\\App\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useAppSelector } from 'store/hooks/hooks';\nimport NotFoundMessage from 'components/commons/NotFoundMessage/NotFoundMessage';\nimport Header from 'components/layouts/Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const count = useAppSelector(store => store.garageList.count);\n  const [errorMessage, setErrorMessage] = useState('Error 404');\n\n  // useEffect(() => {\n  //    dispatch(getGarageListCount()).then((response: any) => {\n  //       const { payload } = response;\n  //       if (payload && !payload?.errorMessage) {\n  //          sessionStorage.setItem('tablesPagesHistory', JSON.stringify({ garageTable: 1, winnersTable: 1 }));\n  //       } else setErrorMessage(payload?.errorMessage);\n  //    });\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), count == 0 ? /*#__PURE__*/_jsxDEV(NotFoundMessage, {\n        message: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 72\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"s20o/WvckAbXMGd8/kY4w6QkKig=\", false, function () {\n  return [useAppSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Outlet","useAppSelector","NotFoundMessage","Header","jsxDEV","_jsxDEV","App","_s","count","store","garageList","errorMessage","setErrorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/App/App.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { useAppSelector } from 'store/hooks/hooks';\r\nimport NotFoundMessage from 'components/commons/NotFoundMessage/NotFoundMessage';\r\n\r\nimport Header from 'components/layouts/Header/Header';\r\n\r\nimport { getGarageListCount } from 'store/modules/garageListReducer';\r\nimport { getWinnersLists } from 'store/modules/winnersListReducer';\r\n\r\nimport { fetchGarageListCount, fetchWinnersListCount } from 'CONSTANTS/Axios';\r\n\r\n\r\nimport styles from './App.module.scss';\r\n\r\nfunction App() {\r\n   const count = useAppSelector( store => store.garageList.count );\r\n   const [errorMessage, setErrorMessage] = useState<string>('Error 404');\r\n\r\n   // useEffect(() => {\r\n   //    dispatch(getGarageListCount()).then((response: any) => {\r\n   //       const { payload } = response;\r\n   //       if (payload && !payload?.errorMessage) {\r\n   //          sessionStorage.setItem('tablesPagesHistory', JSON.stringify({ garageTable: 1, winnersTable: 1 }));\r\n   //       } else setErrorMessage(payload?.errorMessage);\r\n   //    });\r\n   // }, []);\r\n   return (\r\n      <div className=\"wrapper\">\r\n         <div className=\"container\">\r\n            <Header />\r\n            {count == 0 ? <NotFoundMessage message={errorMessage} /> : <Outlet />}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAmBC,QAAQ,QAAQ,OAAO;AACtD,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,eAAe,MAAM,oDAAoD;AAEhF,OAAOC,MAAM,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAMC,KAAK,GAAGP,cAAc,CAAEQ,KAAK,IAAIA,KAAK,CAACC,UAAU,CAACF,KAAM,CAAC;EAC/D,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAS,WAAW,CAAC;;EAErE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACGM,OAAA;IAAKQ,SAAS,EAAC,SAAS;IAAAC,QAAA,eACrBT,OAAA;MAAKQ,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACvBT,OAAA,CAACF,MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACTV,KAAK,IAAI,CAAC,gBAAGH,OAAA,CAACH,eAAe;QAACiB,OAAO,EAAER;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGb,OAAA,CAACL,MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEZ;AAACX,EAAA,CApBQD,GAAG;EAAA,QACKL,cAAc;AAAA;AAAAmB,EAAA,GADtBd,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\Async-Race\\\\src\\\\App\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useAppDispatch } from 'store/hooks/hooks';\nimport NotFoundMessage from 'components/commons/NotFoundMessage/NotFoundMessage';\nimport Header from 'components/layouts/Header/Header';\nimport { getGarageLists } from 'store/modules/garageListReducer';\nimport { getWinnersLists } from 'store/modules/winnersListReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useAppDispatch();\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    dispatch(getGarageLists()).then(response => {\n      const {\n        payload\n      } = response;\n      console.log('payload.errorStatus: ', payload.errorStatus);\n      if (payload && payload !== null && payload !== void 0 && payload.isFailed) {\n        console.log('true', !(payload !== null && payload !== void 0 && payload.isFailed));\n        sessionStorage.setItem('tablesPagesHistory', JSON.stringify({\n          garageTable: 1,\n          winnersTable: 1\n        }));\n        dispatch(getWinnersLists());\n      } else if (payload.errorStatus === 404) setErrorMessage('The server is not responding. Please check your connection or try again later.');\n    });\n  }, []);\n  console.log('errorMessage: ', errorMessage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), errorMessage ? /*#__PURE__*/_jsxDEV(NotFoundMessage, {\n        message: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"+VSr9sYilMMemO/22YGcBxTeSgo=\", false, function () {\n  return [useAppDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Outlet","useAppDispatch","NotFoundMessage","Header","getGarageLists","getWinnersLists","jsxDEV","_jsxDEV","App","_s","dispatch","errorMessage","setErrorMessage","then","response","payload","console","log","errorStatus","isFailed","sessionStorage","setItem","JSON","stringify","garageTable","winnersTable","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/App/App.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useAppDispatch } from 'store/hooks/hooks';\nimport NotFoundMessage from 'components/commons/NotFoundMessage/NotFoundMessage';\n\nimport Header from 'components/layouts/Header/Header';\n\nimport { getGarageLists } from 'store/modules/garageListReducer';\nimport { getWinnersLists } from 'store/modules/winnersListReducer';\n\nimport styles from './App.module.scss';\n\nfunction App() {\n   const dispatch = useAppDispatch();\n   const [ errorMessage, setErrorMessage ] = useState<string>('');\n\n   useEffect(() => {\n      dispatch(getGarageLists()).then((response: any) => {\n         const { payload } = response;\n         console.log('payload.errorStatus: ', payload.errorStatus)\n         if (payload && ( payload?.isFailed)) {\n            console.log('true', !payload?.isFailed)\n            sessionStorage.setItem('tablesPagesHistory', JSON.stringify({ garageTable: 1, winnersTable: 1 }));\n            dispatch(getWinnersLists());\n         } else if ( payload.errorStatus === 404 ) setErrorMessage('The server is not responding. Please check your connection or try again later.');\n      });\n   }, []);\n   console.log('errorMessage: ', errorMessage)\n   return (\n      <div className=\"wrapper\">\n         <div className=\"container\">\n            <Header />\n            {\n               errorMessage \n                  ?  <NotFoundMessage message={ errorMessage } />\n                  :  <Outlet />\n            }\n         </div>\n      </div>\n   );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtD,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,eAAe,MAAM,oDAAoD;AAEhF,OAAOC,MAAM,MAAM,kCAAkC;AAErD,SAASC,cAAc,QAAQ,iCAAiC;AAChE,SAASC,eAAe,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAMC,QAAQ,GAAGT,cAAc,CAAC,CAAC;EACjC,MAAM,CAAEU,YAAY,EAAEC,eAAe,CAAE,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAE9DD,SAAS,CAAC,MAAM;IACbY,QAAQ,CAACN,cAAc,CAAC,CAAC,CAAC,CAACS,IAAI,CAAEC,QAAa,IAAK;MAChD,MAAM;QAAEC;MAAQ,CAAC,GAAGD,QAAQ;MAC5BE,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,OAAO,CAACG,WAAW,CAAC;MACzD,IAAIH,OAAO,IAAMA,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEI,QAAS,EAAE;QAClCH,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE,EAACF,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEI,QAAQ,EAAC;QACvCC,cAAc,CAACC,OAAO,CAAC,oBAAoB,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,WAAW,EAAE,CAAC;UAAEC,YAAY,EAAE;QAAE,CAAC,CAAC,CAAC;QACjGf,QAAQ,CAACL,eAAe,CAAC,CAAC,CAAC;MAC9B,CAAC,MAAM,IAAKU,OAAO,CAACG,WAAW,KAAK,GAAG,EAAGN,eAAe,CAAC,gFAAgF,CAAC;IAC9I,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACNI,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,YAAY,CAAC;EAC3C,oBACGJ,OAAA;IAAKmB,SAAS,EAAC,SAAS;IAAAC,QAAA,eACrBpB,OAAA;MAAKmB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACvBpB,OAAA,CAACJ,MAAM;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEPpB,YAAY,gBACNJ,OAAA,CAACL,eAAe;QAAC8B,OAAO,EAAGrB;MAAc;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAC5CxB,OAAA,CAACP,MAAM;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEZ;AAACtB,EAAA,CA5BQD,GAAG;EAAA,QACQP,cAAc;AAAA;AAAAgC,EAAA,GADzBzB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
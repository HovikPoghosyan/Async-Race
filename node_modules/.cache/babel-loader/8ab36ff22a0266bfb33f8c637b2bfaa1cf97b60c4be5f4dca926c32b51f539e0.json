{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{useAppDispatch}from'store/hooks/hooks';import{handleTablesPagesHistory}from'Storages/SessionStorage';import{setRace}from'store/modules/listReducer';import FinishLine from'components/commons/FinishLine/FinishLine';import GarageTableRow from'components/commons/GarageTableRow/GarageTableRow';import Pagination from'components/commons/Pagination/Pagination';import styles from'./GarageTable.module.scss';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const getStartLineStyle=height=>({fontSize:\"\".concat(Math.min(height/100*10,24),\"px\"),letterSpacing:\"\".concat(Math.min(height/100*2,10),\"px\")});function GarageTable(_ref){let{list}=_ref;const dispatch=useAppDispatch();const pageInHistory=handleTablesPagesHistory('getItem',{key:'garageTable'});const visibleitemsCount=7;const maxPageCount=Math.ceil(list.length/visibleitemsCount);const[pageNo,setPageNo]=useState(pageInHistory<=maxPageCount?pageInHistory:maxPageCount);const tableRef=useRef(null);const[startLineStyle,setStartLineStyle]=useState({});const handlePageChange=No=>setPageNo(No);useEffect(()=>{handleTablesPagesHistory('update',{key:'garageTable',newValue:pageNo});dispatch(setRace(false));},[pageNo]);useEffect(()=>{var _tableRef$current$off,_tableRef$current;const tableHeight=(_tableRef$current$off=tableRef===null||tableRef===void 0?void 0:(_tableRef$current=tableRef.current)===null||_tableRef$current===void 0?void 0:_tableRef$current.offsetHeight)!==null&&_tableRef$current$off!==void 0?_tableRef$current$off:50;setStartLineStyle(getStartLineStyle(tableHeight));},[]);return/*#__PURE__*/_jsxs(\"div\",{className:styles.garageTable,ref:tableRef,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.track,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.startLine,style:startLineStyle,children:\"START\"}),/*#__PURE__*/_jsx(FinishLine,{}),list.slice((pageNo-1)*visibleitemsCount,pageNo*visibleitemsCount).map(car=>/*#__PURE__*/_jsx(GarageTableRow,{carData:car},car.id))]}),list.length>visibleitemsCount?/*#__PURE__*/_jsx(Pagination,{count:list.length,pageNo:pageNo,changePage:No=>handlePageChange(No),visibleitemsCount:visibleitemsCount}):null]});}export default GarageTable;","map":{"version":3,"names":["React","useEffect","useRef","useState","useAppDispatch","handleTablesPagesHistory","setRace","FinishLine","GarageTableRow","Pagination","styles","jsx","_jsx","jsxs","_jsxs","getStartLineStyle","height","fontSize","concat","Math","min","letterSpacing","GarageTable","_ref","list","dispatch","pageInHistory","key","visibleitemsCount","maxPageCount","ceil","length","pageNo","setPageNo","tableRef","startLineStyle","setStartLineStyle","handlePageChange","No","newValue","_tableRef$current$off","_tableRef$current","tableHeight","current","offsetHeight","className","garageTable","ref","children","track","startLine","style","slice","map","car","carData","id","count","changePage"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/components/featues/GarageTable/GarageTable.tsx"],"sourcesContent":["import React, { CSSProperties, FC, useEffect, useRef, useState } from 'react';\nimport { useAppDispatch } from 'store/hooks/hooks';\n\nimport { handleTablesPagesHistory } from 'Storages/SessionStorage';\nimport { Car, setRace } from 'store/modules/listReducer';\n\nimport FinishLine from 'components/commons/FinishLine/FinishLine';\nimport GarageTableRow from 'components/commons/GarageTableRow/GarageTableRow';\nimport Pagination from 'components/commons/Pagination/Pagination';\n\nimport styles from './GarageTable.module.scss';\n\ninterface GarageTableProps {\n   list: Car[];\n}\n\nconst getStartLineStyle = (height: number) => ({\n   fontSize: `${Math.min((height / 100) * 10, 24)}px`,\n   letterSpacing: `${Math.min((height / 100) * 2, 10)}px`,\n});\n\nfunction GarageTable({ list }: GarageTableProps) {\n   const dispatch = useAppDispatch();\n   const pageInHistory = handleTablesPagesHistory('getItem', { key: 'garageTable' });\n   const visibleitemsCount = 7;\n   const maxPageCount = Math.ceil(list.length / visibleitemsCount);\n   const [pageNo, setPageNo] = useState<number>(pageInHistory <= maxPageCount ? pageInHistory : maxPageCount);\n   const tableRef = useRef<HTMLDivElement>(null);\n   const [startLineStyle, setStartLineStyle] = useState<CSSProperties>({});\n   const handlePageChange = (No: number) => setPageNo(No);\n   useEffect(() => {\n      handleTablesPagesHistory('update', { key: 'garageTable', newValue: pageNo });\n      dispatch(setRace(false));\n   }, [pageNo]);\n   useEffect(() => {\n      const tableHeight: number = tableRef?.current?.offsetHeight ?? 50;\n      setStartLineStyle(getStartLineStyle(tableHeight));\n   }, []);\n   return (\n      <div className={styles.garageTable} ref={tableRef}>\n         <div className={styles.track}>\n            <span className={styles.startLine} style={startLineStyle}>\n               START\n            </span>\n            <FinishLine />\n            {list.slice((pageNo - 1) * visibleitemsCount, pageNo * visibleitemsCount).map((car) => (\n               <GarageTableRow key={car.id} carData={car} />\n            ))}\n         </div>\n         {list.length > visibleitemsCount ? (\n            <Pagination\n               count={list.length}\n               pageNo={pageNo}\n               changePage={(No) => handlePageChange(No)}\n               visibleitemsCount={visibleitemsCount}\n            />\n         ) : null}\n      </div>\n   );\n}\n\nexport default GarageTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
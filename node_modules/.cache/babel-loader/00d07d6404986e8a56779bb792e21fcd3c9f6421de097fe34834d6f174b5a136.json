{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useAppDispatch,useAppSelector}from'store/hooks/hooks';import{setWinnersList}from'store/modules/listReducer';import sortWinnersList from'./SortWinnersList';import ToggleButton from'../ToggleButton/ToggleButton';import styles from'./WinnerTableHead.module.scss';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function WinnerTableHead(){const dispatch=useAppDispatch();const winnersList=useAppSelector(store=>store.list.winnersList);const[sortBy,setSortBy]=useState('By Time');const[sortDirection,setSortDirection]=useState('Increasing');useEffect(()=>{if(sortBy&&sortDirection)dispatch(setWinnersList(sortWinnersList(winnersList,sortBy,sortDirection)));},[sortBy,sortDirection,dispatch]);return/*#__PURE__*/_jsxs(\"div\",{className:styles.winnerTableHead,children:[/*#__PURE__*/_jsx(ToggleButton,{name:\"sortBy\",valueOne:\"By Wins\",valueTwo:\"By Time\",startValue:\"By Time\",onToggle:newValue=>{if(newValue!==null){setSortBy(newValue);}},uncheckedValue:null}),/*#__PURE__*/_jsx(ToggleButton,{name:\"sortDirection\",valueOne:\"Increasing\",valueTwo:\"Decreasing\",startValue:\"Increasing\",onToggle:newValue=>{if(newValue!==null){setSortDirection(newValue);}},uncheckedValue:null})]});}export default WinnerTableHead;","map":{"version":3,"names":["React","useEffect","useState","useAppDispatch","useAppSelector","setWinnersList","sortWinnersList","ToggleButton","styles","jsx","_jsx","jsxs","_jsxs","WinnerTableHead","dispatch","winnersList","store","list","sortBy","setSortBy","sortDirection","setSortDirection","className","winnerTableHead","children","name","valueOne","valueTwo","startValue","onToggle","newValue","uncheckedValue"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/components/commons/WinnerTableHead/WinnerTableHead.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from 'store/hooks/hooks';\nimport { setWinnersList } from 'store/modules/listReducer';\nimport sortWinnersList, { SortBy, SortDirection } from './SortWinnersList';\nimport ToggleButton from '../ToggleButton/ToggleButton';\n\nimport styles from './WinnerTableHead.module.scss';\n\nfunction WinnerTableHead() {\n   const dispatch = useAppDispatch();\n   const winnersList = useAppSelector((store) => store.list.winnersList);\n   const [sortBy, setSortBy] = useState<SortBy>('By Time');\n   const [sortDirection, setSortDirection] = useState<SortDirection>('Increasing');\n   useEffect(() => {\n      if (sortBy && sortDirection) dispatch(setWinnersList(sortWinnersList(winnersList, sortBy, sortDirection)));\n   }, [sortBy, sortDirection, dispatch]);\n\n   return (\n      <div className={styles.winnerTableHead}>\n         <ToggleButton\n            name=\"sortBy\"\n            valueOne=\"By Wins\"\n            valueTwo=\"By Time\"\n            startValue=\"By Time\"\n            onToggle={(newValue: string | null) => {\n               if (newValue !== null) {\n                  setSortBy(newValue as SortBy);\n               }\n            }}\n            uncheckedValue={null}\n         />\n         <ToggleButton\n            name=\"sortDirection\"\n            valueOne=\"Increasing\"\n            valueTwo=\"Decreasing\"\n            startValue=\"Increasing\"\n            onToggle={(newValue: string | null) => {\n               if (newValue !== null) {\n                  setSortDirection(newValue as SortDirection);\n               }\n            }}\n            uncheckedValue={null}\n         />\n      </div>\n   );\n}\n\nexport default WinnerTableHead;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,cAAc,CAAEC,cAAc,KAAQ,mBAAmB,CAClE,OAASC,cAAc,KAAQ,2BAA2B,CAC1D,MAAO,CAAAC,eAAe,KAAiC,mBAAmB,CAC1E,MAAO,CAAAC,YAAY,KAAM,8BAA8B,CAEvD,MAAO,CAAAC,MAAM,KAAM,+BAA+B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,eAAeA,CAAA,CAAG,CACxB,KAAM,CAAAC,QAAQ,CAAGX,cAAc,CAAC,CAAC,CACjC,KAAM,CAAAY,WAAW,CAAGX,cAAc,CAAEY,KAAK,EAAKA,KAAK,CAACC,IAAI,CAACF,WAAW,CAAC,CACrE,KAAM,CAACG,MAAM,CAAEC,SAAS,CAAC,CAAGjB,QAAQ,CAAS,SAAS,CAAC,CACvD,KAAM,CAACkB,aAAa,CAAEC,gBAAgB,CAAC,CAAGnB,QAAQ,CAAgB,YAAY,CAAC,CAC/ED,SAAS,CAAC,IAAM,CACb,GAAIiB,MAAM,EAAIE,aAAa,CAAEN,QAAQ,CAACT,cAAc,CAACC,eAAe,CAACS,WAAW,CAAEG,MAAM,CAAEE,aAAa,CAAC,CAAC,CAAC,CAC7G,CAAC,CAAE,CAACF,MAAM,CAAEE,aAAa,CAAEN,QAAQ,CAAC,CAAC,CAErC,mBACGF,KAAA,QAAKU,SAAS,CAAEd,MAAM,CAACe,eAAgB,CAAAC,QAAA,eACpCd,IAAA,CAACH,YAAY,EACVkB,IAAI,CAAC,QAAQ,CACbC,QAAQ,CAAC,SAAS,CAClBC,QAAQ,CAAC,SAAS,CAClBC,UAAU,CAAC,SAAS,CACpBC,QAAQ,CAAGC,QAAuB,EAAK,CACpC,GAAIA,QAAQ,GAAK,IAAI,CAAE,CACpBX,SAAS,CAACW,QAAkB,CAAC,CAChC,CACH,CAAE,CACFC,cAAc,CAAE,IAAK,CACvB,CAAC,cACFrB,IAAA,CAACH,YAAY,EACVkB,IAAI,CAAC,eAAe,CACpBC,QAAQ,CAAC,YAAY,CACrBC,QAAQ,CAAC,YAAY,CACrBC,UAAU,CAAC,YAAY,CACvBC,QAAQ,CAAGC,QAAuB,EAAK,CACpC,GAAIA,QAAQ,GAAK,IAAI,CAAE,CACpBT,gBAAgB,CAACS,QAAyB,CAAC,CAC9C,CACH,CAAE,CACFC,cAAc,CAAE,IAAK,CACvB,CAAC,EACA,CAAC,CAEZ,CAEA,cAAe,CAAAlB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
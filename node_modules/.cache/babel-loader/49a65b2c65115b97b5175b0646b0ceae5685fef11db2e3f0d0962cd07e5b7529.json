{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchGarageList } from 'CONSTANTS/Axios';\nconst getGarageList = createAsyncThunk('list/getGarageList', async ({}, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const data = await fetchGarageList();\n  if (data.isFailed) return rejectWithValue();\n  return dispatch(setGarageList(data));\n});\n\n// const updateCar = createAsyncThunk(\n//    'list/updateCar',\n//    async ( { user, updatedCarData }, { rejectWithValue, dispatch } ) => {\n//       const data = await fetchUpdateCar( user, updatedCarData );\n\n//       if ( data.isFailed ) return rejectWithValue();\n\n//       return dispatch( getPosts( user ) );\n//    }\n// );\n\nconst initialState = {\n  garageList: [],\n  winnersList: [],\n  loading: false\n};\nconst appSlice = createSlice({\n  name: 'list',\n  initialState,\n  reducers: {\n    setGarageList(state, {\n      payload\n    }) {\n      state.garageList = payload;\n    },\n    setLoading(state, {\n      payload\n    }) {\n      state.loading = payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getGarageList.pending, state => {\n      state.loading = true;\n      state.isAddCarPopupOpen = false;\n    }).addCase(getGarageList.fulfilled, state => {\n      setloa;\n    }).addCase(getGarageList.rejected, state => {\n      setloa;\n    });\n  }\n});\nexport const {\n  setGarageList\n} = appSlice.actions;\nexport { getGarageList };\nexport default appSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchGarageList","getGarageList","rejectWithValue","dispatch","data","isFailed","setGarageList","initialState","garageList","winnersList","loading","appSlice","name","reducers","state","payload","setLoading","extraReducers","builder","addCase","pending","isAddCarPopupOpen","fulfilled","setloa","rejected","actions","reducer"],"sources":["C:/Users/Admin/Documents/GitHub/Async-Race/src/store/modules/listReducer.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { fetchGarageList } from 'CONSTANTS/Axios';\n\n\nconst getGarageList = createAsyncThunk(\n   'list/getGarageList',\n   async ( { }, { rejectWithValue, dispatch } ) => {\n      const data = await fetchGarageList( );\n\n      if ( data.isFailed ) return rejectWithValue();\n\n      return dispatch( setGarageList( data ) );\n   }\n); \n\n// const updateCar = createAsyncThunk(\n//    'list/updateCar',\n//    async ( { user, updatedCarData }, { rejectWithValue, dispatch } ) => {\n//       const data = await fetchUpdateCar( user, updatedCarData );\n\n//       if ( data.isFailed ) return rejectWithValue();\n\n//       return dispatch( getPosts( user ) );\n//    }\n// );\n\nconst initialState = {\n   garageList: [],\n   winnersList: [],\n   loading: false,\n};\n\nconst appSlice = createSlice({\n   name: 'list',\n   initialState,\n   reducers: {\n      setGarageList( state, { payload } ) {\n         state.garageList = payload;\n      },\n      setLoading( state, { payload }) {\n         state.loading = payload\n      }\n   },\n   extraReducers: ( builder ) => {\n      builder\n      .addCase( getGarageList.pending, ( state ) => {\n         state.loading = true;\n         state.isAddCarPopupOpen = false;\n      })\n      .addCase( getGarageList.fulfilled, ( state ) => {\n         setloa\n      })\n      .addCase( getGarageList.rejected, ( state ) => {\n         setloa\n      })\n   }\n});\n\nexport const { \n   setGarageList,\n} = appSlice.actions;\nexport { getGarageList };\nexport default appSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,SAASC,eAAe,QAAQ,iBAAiB;AAGjD,MAAMC,aAAa,GAAGF,gBAAgB,CACnC,oBAAoB,EACpB,OAAQ,CAAE,CAAC,EAAE;EAAEG,eAAe;EAAEC;AAAS,CAAC,KAAM;EAC7C,MAAMC,IAAI,GAAG,MAAMJ,eAAe,CAAE,CAAC;EAErC,IAAKI,IAAI,CAACC,QAAQ,EAAG,OAAOH,eAAe,CAAC,CAAC;EAE7C,OAAOC,QAAQ,CAAEG,aAAa,CAAEF,IAAK,CAAE,CAAC;AAC3C,CACH,CAAC;;AAED;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,MAAMG,YAAY,GAAG;EAClBC,UAAU,EAAE,EAAE;EACdC,WAAW,EAAE,EAAE;EACfC,OAAO,EAAE;AACZ,CAAC;AAED,MAAMC,QAAQ,GAAGb,WAAW,CAAC;EAC1Bc,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACPP,aAAaA,CAAEQ,KAAK,EAAE;MAAEC;IAAQ,CAAC,EAAG;MACjCD,KAAK,CAACN,UAAU,GAAGO,OAAO;IAC7B,CAAC;IACDC,UAAUA,CAAEF,KAAK,EAAE;MAAEC;IAAQ,CAAC,EAAE;MAC7BD,KAAK,CAACJ,OAAO,GAAGK,OAAO;IAC1B;EACH,CAAC;EACDE,aAAa,EAAIC,OAAO,IAAM;IAC3BA,OAAO,CACNC,OAAO,CAAElB,aAAa,CAACmB,OAAO,EAAIN,KAAK,IAAM;MAC3CA,KAAK,CAACJ,OAAO,GAAG,IAAI;MACpBI,KAAK,CAACO,iBAAiB,GAAG,KAAK;IAClC,CAAC,CAAC,CACDF,OAAO,CAAElB,aAAa,CAACqB,SAAS,EAAIR,KAAK,IAAM;MAC7CS,MAAM;IACT,CAAC,CAAC,CACDJ,OAAO,CAAElB,aAAa,CAACuB,QAAQ,EAAIV,KAAK,IAAM;MAC5CS,MAAM;IACT,CAAC,CAAC;EACL;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACVjB;AACH,CAAC,GAAGK,QAAQ,CAACc,OAAO;AACpB,SAASxB,aAAa;AACtB,eAAeU,QAAQ,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}